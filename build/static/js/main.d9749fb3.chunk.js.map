{"version":3,"sources":["assets/img/theme/bootstrap.jpg","assets/img/theme/angular.jpg","assets/img/theme/sketch.jpg","assets/img/theme/react.jpg","assets/img/theme/vue.jpg","assets/img/brand/argon-react.png","assets/img/theme/team-4-800x800.jpg","assets/img/theme/profile-cover.jpg","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg","assets/img/brand/argon-react-white.png","redux/actionConstants/index.js","redux/reducers/userReducer.js","redux/reducers/walletsReducer.js","redux/reducers/transactionHistoryReducer.js","redux/reducers/gamesReducer.js","redux/reducers/gameBetsReducer.js","redux/reducers/loaderReducer.js","redux/reducers/index.js","redux/store/configStore.js","redux/actionDispatcher/index.js","redux/services/service.js","redux/services/serviceList.js","redux/actions/userActions.js","redux/services/user/user.js","redux/actions/wallets.js","redux/services/wallets/wallets.js","redux/actions/transactionHistory.js","redux/services/transactionHistory/transactionHistory.js","redux/actions/games.js","redux/services/games/games.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","views/Index.js","views/examples/Game.js","views/examples/GameBets.js","views/examples/Login.js","views/examples/PaymentRequest.js","views/examples/TransactionsHistory.js","views/examples/Wallet.js","views/examples/Users.js","views/examples/GameResults.js","views/examples/WinningResult.js","routes.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","components/Loader/loader.js","App.js","index.js","assets/img/theme/team-1-800x800.jpg","assets/img/theme/team-2-800x800.jpg","assets/img/theme/team-3-800x800.jpg","variables/charts.js","config/hostConfig.js"],"names":["LOGIN_SUCCESS","USER_GET_START","USER_GET_SUCCESS","USER_GET_FAILURE","USER_TRANSACTIONS_GET_SUCCESS","SELECTED_USER","GET_WALLETS_SUCCESS","SET_WALLETS_DATA","GET_TRANSACTIONS_HISTORY_SUCCESS","GET_USER_REQUEST_SUCCESS","UPDATE_USER_REQUEST_SUCCESS","SET_TRANSACTIONS_HISTORY_DATA","GET_TODAY_RESULT_SUCCESS","GET_GAMES_SUCCESS","GET_GAMES_BETS_SUCCESS","GET_GAME_BETS_SUCCESS","GET_GAME_RESULTS_SUCCESS","UPDATE_GAME_RESULTS_SUCCESS","INITIAL_STATE","login","data","error","userList","userTransationList","selectedUser","walletsList","selectedWallet","transactionHistory","selectedTransactionHistory","userRequests","updateRequest","gamesList","gameBets","gameResults","updateGameResults","selectedGames","todayResult","gameBetsList","selectedGameBets","load","appReducer","combineReducers","user","state","action","type","response","loader","actions","indexOf","code","wallets","games","session","sessionReducer","toastr","toastrReducer","rootReducer","middleware","ReduxThunk","logger","createLogger","predicate","getState","collapsed","LogRocket","reduxMiddleware","store","applyMiddleware","createStore","createRNReduxStore","sessionService","initSessionService","redirectPath","driver","DispatchActionToReducer","service","actionTypeStart","actionTypeSuccess","actionTypeFailure","callback","dispatch","then","result","status","catch","errorString","message","component","dangerouslySetInnerHTML","__html","SimpleDispatchActionToReducer","apiCall","apiPromise","a","token","axios","method","url","urls","responseType","crossDomain","headers","Authorization","hostConfig","apiBaseUrl","loadSession","currentSession","sessionToken","err","console","log","res","apiNoTokenCall","createQueryParamComponent","key","value","csv","Array","isArray","map","valueItem","encodeURIComponent","encodeUriComponentWithKey","join","createQueryParams","params","queryParams","Object","keys","filter","Boolean","length","API","network","register","updateUser","addMoneyToWallet","usersList","usersFilteredList","usersTransactionsList","forgotpassword","getJobSeekerQuestionsList","getQuestions","createQuestions","updateQuestion","createSurvey","getOffers","getOffersStatusCount","createOffer","acceptOffer","createShortlisted","getShortlisted","removeShortlisted","getMessages","addMessages","getWallets","updateWallets","getTransactionHistory","getGameBets","getGames","getTodayResult","addGame","getGamesResult","getGamesBets","getUserRequest","approveRequest","email","password","dispatchActionToReducer","loginService","undefined","saveSession","sessionId","saveUser","getUserList","queryParam","queryParm","query","getUserListService","body","reqData","getWalletsService","getTransactionHistoryService","getUserRequestService","updateUserRequest","updatData","userData","getGamesService","getTodayResultService","_id","getGamesBetsService","getGameResults","getGamesResultService","withRouter","connect","props","useDispatch","handleLogout","e","preventDefault","window","confirm","deleteSession","deleteUser","location","href","Navbar","className","expand","id","Container","fluid","to","brandText","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","default","first_name","last_name","DropdownMenu","right","DropdownItem","header","tag","Link","divider","onClick","Footer","Row","Col","xl","Date","getFullYear","rel","target","NavItem","NavLink","Sidebar","navbarBrandProps","useState","collapseOpen","setCollapseOpen","toggleCollapse","closeCollapse","routes","bgColor","logo","innerLink","outterLink","NavbarBrand","imgAlt","imgSrc","Collapse","isOpen","xs","prop","layout","path","NavLinkRRD","activeClassName","icon","name","createLinks","defaultProps","totalAmount","setTotalAmount","totalAddLAmount","setTotalAddedAmount","totalWithdrwalAmount","setTotalWithdrwalAmount","pendingRequest","setPendingRequest","setLastBid","useEffect","errors","total","forEach","wallet","total_amount","wtotal","atotal","amount","transaction_status","transaction_type","lastINdex","lg","Card","CardBody","CardTitle","winning_bet_number","created_at","last_user_bid","winning_amount","Index","activeNav","setActiveNav","chartExample1Data","setChartExample1Data","Chart","parseOptions","chartOptions","toggleNavs","index","CardHeader","pills","classnames","active","chartExample1","options","getDatasetAtEvent","chartExample2","Button","color","size","Table","responsive","scope","Progress","max","barClassName","gameData","setGameData","game_name","start_date","now","end_date","submitted","setState","React","page","setPage","rowsPerPage","setRowsPerPage","filterS","setFilter","searchText","setSearchText","handleChange","prevState","emptyRows","Math","role","autoComplete","onChange","required","disabled","game","search","toLowerCase","JSON","stringify","includes","getGameData","TableContainer","TableHead","TableRow","TableCell","align","TableBody","slice","list","moment","format","toUpperCase","style","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","count","onPageChange","event","newPage","onRowsPerPageChange","parseInt","walletData","phone_number","game_id","user_id","min","createdDate","hrows","setHRowsCount","vrows","setVRowsCount","singleRows","setSingleRowsCount","inputValues","setInputValues","resultValues","setResultValues","andarValues","setAndarValues","baharValues","setBaharValues","totalbat","setTotalBat","totalandar","setTotalAndar","totalbahar","setTotalBahar","getGameBetsData","filterOptions","createFilterOptions","ignoreCase","ignoreAccents","values","inside_bets","outside_bets","element","bets","targetNUmber","bet_number","item","sitem","Number","bet_amount","isNaN","calculateSumValues","onRowValueChange","_","cloneDeep","onAndarValueChange","reduce","totalValue","onBaharValueChange","sum","baharTotal","anderTotal","Autocomplete","wallet_id","option","renderOption","Fragment","Grid","Typography","variant","getOptionLabel","renderInput","TextField","fontSize","sItem","sIndex","Login","emailError","test","md","htmlFor","setUserData","transaction_mode","createdAt","getUserData","onUpdate","transaction","success","handleFilterChange","fullWidth","Select","inputProps","marginLeft","setTransactionHistory","updatedAt","setWallets","rowKey","step","getWalletData","setGames","getGameResultData","currentTarget","getAttribute","caret","dropDownValue","Users","Game","GameBets","GameResults","Wallet","PaymentRequest","TransactionsHistory","Admin","mainContent","useRef","useLocation","document","documentElement","scrollTop","scrollingElement","current","ref","i","pathname","getBrandText","from","AdminFooter","AdminNavbar","UncontrolledCollapse","toggler","Auth","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","getRoutes","AuthFooter","RenderLoader","this","showLoader","checked","chat","Component","posts","App","isLoaded","authenticated","timeOut","transitionIn","transitionOut","progressBar","render","PropTypes","bool","networkReducer","ReactDOM","getElementById","elements","Rectangle","prototype","draw","left","top","bottom","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","width","barSize","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","primary","secondary","info","danger","warning","scales","yAxes","gridLines","zeroLineColor","ticks","tooltips","callbacks","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","module","exports","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent","maxBarThickness","configObj","apiProtocol","portname","baseApiPort","origin"],"mappings":"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","file":"static/js/main.d9749fb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bootstrap.bd712487.jpg\";","export default __webpack_public_path__ + \"static/media/angular.b5045666.jpg\";","export default __webpack_public_path__ + \"static/media/sketch.a6af780a.jpg\";","export default __webpack_public_path__ + \"static/media/react.0e8c9066.jpg\";","export default __webpack_public_path__ + \"static/media/vue.43bd93a8.jpg\";","export default __webpack_public_path__ + \"static/media/argon-react.128d71d3.png\";","export default __webpack_public_path__ + \"static/media/team-4-800x800.99c612eb.jpg\";","export default __webpack_public_path__ + \"static/media/profile-cover.97899245.jpg\";","export default __webpack_public_path__ + \"static/media/github.6c955556.svg\";","export default __webpack_public_path__ + \"static/media/google.eae9aa93.svg\";","export default __webpack_public_path__ + \"static/media/argon-react-white.e4dd3b41.png\";","/**\n * User Constants\n */\n//LOGIN\nexport const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\n//USER REGISTRATION\nexport const USER_REGISTRATION_START = \"USER_REGISTRATION_START\";\nexport const USER_REGISTRATION_SUCCESS = \"USER_REGISTRATION_SUCCESS\";\nexport const USER_REGISTRATION_FAILURE = \"USER_REGISTRATION_FAILURE\";\n\n//USER GET\nexport const USER_GET_START = \"USER_GET_START\";\nexport const USER_GET_SUCCESS = \"USER_GET_SUCCESS\";\nexport const USER_GET_FAILURE = \"USER_GET_FAILURE\";\n\n// user transactions get\nexport const USER_TRANSACTIONS_GET_START = \"USER_TRANSACTIONS_GET_START\";\nexport const USER_TRANSACTIONS_GET_SUCCESS = \"USER_TRANSACTIONS_GET_SUCCESS\";\nexport const USER_TRANSACTIONS_GET_FAILURE = \"USER_TRANSACTIONS_GET_FAILURE\";\n\n\n//USER UPDATE\nexport const USER_UPDATE_START = \"USER_UPDATE_START\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAILURE = \"USER_UPDATE_FAILURE\";\n\n//USER UPDATE\nexport const ADD_MONEY_WALLET_START = \"ADD_MONEY_WALLET_START\";\nexport const ADD_MONEY_WALLET_SUCCESS = \"ADD_MONEY_WALLET_SUCCESS\";\nexport const ADD_MONEY_WALLET_FAILURE = \"ADD_MONEY_WALLET_FAILURE\";\n\n// FORGOT PASSWORD\nexport const FORGOT_PASSWORD_START = \"FORGOT_PASSWORD_START\";\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_FAILURE = \"FORGOT_PASSWORD_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SELECTED_USER = \"SELECTED_USER\";\n\n// GET WALLETS DATA\nexport const GET_WALLETS_START = \"GET_WALLETS_START\";\nexport const GET_WALLETS_SUCCESS = \"GET_WALLETS_SUCCESS\";\nexport const GET_WALLETS_FAILURE = \"GET_WALLETS_FAILURE\";\nexport const SET_WALLETS_DATA = \"SET_WALLETS_DATA\";\n\n// ADD WALLETS DATA\nexport const ADD_WALLETS_START = \"ADD_WALLETS_START\";\nexport const ADD_WALLETS_SUCCESS = \"ADD_WALLETS_SUCCESS\";\nexport const ADD_WALLETS_FAILURE = \"ADD_WALLETS_FAILURE\";\n\n// ACCEPT WALLETS DATA\nexport const ACCEPT_WALLETS_START = \"ACCEPT_WALLETS_START\";\nexport const ACCEPT_WALLETS_SUCCESS = \"ACCEPT_WALLETS_SUCCESS\";\nexport const ACCEPT_WALLETS_FAILURE = \"ACCEPT_WALLETS_FAILURE\";\n\n\n// GET TRANSACTIONS_HISTORY DATA\nexport const GET_TRANSACTIONS_HISTORY_START = \"GET_TRANSACTIONS_HISTORY_START\";\nexport const GET_TRANSACTIONS_HISTORY_SUCCESS = \"GET_TRANSACTIONS_HISTORY_SUCCESS\";\nexport const GET_TRANSACTIONS_HISTORY_FAILURE = \"GET_TRANSACTIONS_HISTORY_FAILURE\";\n\n// GET User Reqyest DATA\nexport const GET_USER_REQUEST_START = \"GET_USER_REQUEST_START\";\nexport const GET_USER_REQUEST_SUCCESS = \"GET_USER_REQUEST_SUCCESS\";\nexport const GET_USER_REQUEST_FAILURE = \"GET_USER_REQUEST_FAILURE\";\n\n// Update User Reqyest DATA\nexport const UPDATE_USER_REQUEST_START = \"UPDATE_USER_REQUEST_START\";\nexport const UPDATE_USER_REQUEST_SUCCESS = \"UPDATE_USER_REQUEST_SUCCESS\";\nexport const UPDATE_USER_REQUEST_FAILURE = \"UPDATE_USER_REQUEST_FAILURE\";\n\nexport const SET_TRANSACTIONS_HISTORY_DATA = \"SET_TRANSACTIONS_HISTORY_DATA\";\n\n// GAMES DATA\nexport const GET_TODAY_RESULT_START = \"GET_TODAY_RESULT_START\";\nexport const GET_TODAY_RESULT_SUCCESS = \"GET_TODAY_RESULT_SUCCESS\";\nexport const GET_TODAY_RESULT_FAILURE = \"GET_TODAY_RESULT_FAILURE\";\n\nexport const GET_GAMES_START = \"GET_GAMES_START\";\nexport const GET_GAMES_SUCCESS = \"GET_GAMES_SUCCESS\";\nexport const GET_GAMES_FAILURE = \"GET_GAMES_FAILURE\";\n\nexport const GET_GAMES_RESULT_START = \"GET_GAMES_RESULT_START\";\nexport const GET_GAMES_RESULT_SUCCESS = \"GET_GAMES_RESULT_SUCCESS\";\nexport const GET_GAMES_RESULT_FAILURE = \"GET_GAMES_RESULT_FAILURE\";\n\n// GAMES BETS DATA\nexport const GET_GAMES_BETS_START = \"GET_GAMES_BETS_START\";\nexport const GET_GAMES_BETS_SUCCESS = \"GET_GAMES_BETS_SUCCESS\";\nexport const GET_GAMES_BETS_FAILURE = \"GET_GAMES_BETS_FAILURE\";\n\nexport const ADD_GAMES_START = \"ADD_GAMES_START\";\nexport const ADD_GAMES_SUCCESS = \"ADD_GAMES_SUCCESS\";\nexport const ADD_GAMES_FAILURE = \"ADD_GAMES_FAILURE\";\n\n// GAME_BETS DATA\nexport const GET_GAME_BETS_START = \"GET_GAME_BETS_START\";\nexport const GET_GAME_BETS_SUCCESS = \"GET_GAME_BETS_SUCCESS\";\nexport const GET_GAME_BETS_FAILURE = \"GET_GAME_BETS_FAILURE\";\n\nexport const ADD_GAME_BETS_START = \"ADD_GAME_BETS_START\";\nexport const ADD_GAME_BETS_SUCCESS = \"ADD_GAME_BETS_SUCCESS\";\nexport const ADD_GAME_BETS_FAILURE = \"ADD_GAME_BETS_FAILURE\";\n\nexport const UPDATE_GAME_BETS_START = \"UPDATE_GAME_BETS_START\";\nexport const UPDATE_GAME_BETS_SUCCESS = \"UPDATE_GAME_BETS_SUCCESS\";\nexport const UPDATE_GAME_BETS_FAILURE = \"UPDATE_GAME_BETS_FAILURE\";\n\n// GAME_RESULTS DATA\nexport const GET_GAME_RESULTS_START = \"GET_GAME_RESULTS_START\";\nexport const GET_GAME_RESULTS_SUCCESS = \"GET_GAME_RESULTS_SUCCESS\";\nexport const GET_GAME_RESULTS_FAILURE = \"GET_GAME_RESULTS_FAILURE\";\n\nexport const ADD_GAME_RESULTS_START = \"ADD_GAME_RESULTS_START\";\nexport const ADD_GAME_RESULTS_SUCCESS = \"ADD_GAME_RESULTS_SUCCESS\";\nexport const ADD_GAME_RESULTS_FAILURE = \"ADD_GAME_RESULTS_FAILURE\";\n\nexport const UPDATE_GAME_RESULTS_START = \"UPDATE_GAME_RESULTS_START\";\nexport const UPDATE_GAME_RESULTS_SUCCESS = \"UPDATE_GAME_RESULTS_SUCCESS\";\nexport const UPDATE_GAME_RESULTS_FAILURE = \"UPDATE_GAME_RESULTS_FAILURE\";\n\n// GET SHORT_LIST_USER DATA\nexport const GET_SHORT_LIST_USER_START = \"GET_SHORT_LIST_USER_START\";\nexport const GET_SHORT_LIST_USER_SUCCESS = \"GET_SHORT_LIST_USER_SUCCESS\";\nexport const GET_SHORT_LIST_USER_FAILURE = \"GET_SHORT_LIST_USER_FAILURE\";\n\n// ADD SHORT_LIST_USER DATA\nexport const ADD_SHORT_LIST_USER_START = \"ADD_SHORT_LIST_USER_START\";\nexport const ADD_SHORT_LIST_USER_SUCCESS = \"ADD_SHORT_LIST_USER_SUCCESS\";\nexport const ADD_SHORT_LIST_USER_FAILURE = \"ADD_SHORT_LIST_USER_FAILURE\";\n\n// ADD SHORT_LIST_USER DATA\nexport const REMOVE_SHORT_LIST_USER_START = \"REMOVE_SHORT_LIST_USER_START\";\nexport const REMOVE_SHORT_LIST_USER_SUCCESS = \"REMOVE_SHORT_LIST_USER_SUCCESS\";\nexport const REMOVE_SHORT_LIST_USER_FAILURE = \"REMOVE_SHORT_LIST_USER_FAILURE\";\n\n// GET MESSAGES\nexport const GET_MESSAGES_LIST_START = \"GET_MESSAGES_LIST_START\";\nexport const GET_MESSAGES_LIST_SUCCESS = \"GET_MESSAGES_LIST_SUCCESS\";\nexport const GET_MESSAGES_LIST_FAILURE = \"GET_MESSAGES_LIST_FAILURE\";\n\n// ADD MESSAGES\nexport const ADD_MESSAGES_LIST_START = \"ADD_MESSAGES_LIST_START\";\nexport const ADD_MESSAGES_LIST_SUCCESS = \"ADD_MESSAGES_LIST_SUCCESS\";\nexport const ADD_MESSAGES_LIST_FAILURE = \"ADD_MESSAGES_LIST_FAILURE\";\n\n// GET PRICING PLANS\nexport const GET_PLANS_LIST_START = \"GET_PLANS_LIST_START\";\nexport const GET_PLANS_LIST_SUCCESS = \"GET_PLANS_LIST_SUCCESS\";\nexport const GET_PLANS_LIST_FAILURE = \"GET_PLANS_LIST_FAILURE\";\nexport const SET_PLAN_DETAIL = \"SET_PLAN_DETAIL\";","/**\n *  Imports\n */\nimport {\n  LOGIN_SUCCESS,\n  USER_GET_SUCCESS,\n  USER_TRANSACTIONS_GET_SUCCESS,\n  SELECTED_USER\n} from \"../actionConstants\";\n\n/** Initial State  */\nconst INITIAL_STATE = {\n  login: {\n    data: {},\n    error: {}\n  },\n  userList: [],\n  userTransationList: [],\n  selectedUser: {}\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return { ...state, login: { error: {}, data: { ...action.data } } };\n    case USER_GET_SUCCESS:\n      return { ...state, userList: [...action.data.response] };\n    case USER_TRANSACTIONS_GET_SUCCESS:\n      return { ...state, userTransationList: [...action.data] };\n    case SELECTED_USER:\n      return { ...state, selectedUser: { ...action.data } };\n    default:\n      return state;\n  }\n}\n","/**\n *  Imports\n */\nimport {\n    GET_WALLETS_SUCCESS,\n    SET_WALLETS_DATA\n} from \"../actionConstants\";\n\n/** Initial State  */\nconst INITIAL_STATE = {\n    walletsList: [],\n    selectedWallet: {}\n};\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case GET_WALLETS_SUCCESS:\n            return { ...state, walletsList: [...action.data] };\n        case SET_WALLETS_DATA:\n            return { ...state, selectedWallet: { ...action.data } };\n        default:\n            return state;\n    }\n}\n","/**\n *  Imports\n */\nimport {\n    GET_TRANSACTIONS_HISTORY_SUCCESS,\n    SET_TRANSACTIONS_HISTORY_DATA,\n    GET_USER_REQUEST_SUCCESS,\n    UPDATE_USER_REQUEST_SUCCESS\n} from \"../actionConstants\";\n\n/** Initial State  */\nconst INITIAL_STATE = {\n    transactionHistory: [],\n    selectedTransactionHistory: {},\n    userRequests: [],\n    updateRequest: {}\n};\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case GET_TRANSACTIONS_HISTORY_SUCCESS:\n            return { ...state, transactionHistory: [...action.data] };\n        case SET_TRANSACTIONS_HISTORY_DATA:\n            return { ...state, selectedTransactionHistory: { ...action.data } };\n        case GET_USER_REQUEST_SUCCESS:\n            return { ...state, userRequests: [...action.data] };\n        case UPDATE_USER_REQUEST_SUCCESS:\n            return { ...state, updateRequest: { ...action.data } }\n        default:\n            return state;\n    }\n}\n","/**\n *  Imports\n */\nimport {\n    GET_GAMES_SUCCESS,\n    GET_GAMES_BETS_SUCCESS,\n    GET_GAME_RESULTS_SUCCESS,\n    UPDATE_GAME_RESULTS_SUCCESS,\n    GET_TODAY_RESULT_SUCCESS,\n} from \"../actionConstants\";\n\n/** Initial State  */\nconst INITIAL_STATE = {\n    gamesList: [],\n    gameBets: [],\n    gameResults: [],\n    updateGameResults: {},\n    selectedGames: {},\n    todayResult: {}\n};\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case GET_GAMES_SUCCESS:\n            return { ...state, gamesList: [...action.data.response] };\n        case GET_GAMES_BETS_SUCCESS:\n            return { ...state, gameBets: [...action.data] };\n        case GET_GAME_RESULTS_SUCCESS:\n            return { ...state, gameResults: [...action.data] };\n        case UPDATE_GAME_RESULTS_SUCCESS:\n            return { ...state, updateGameResults: { ...action.data } };\n        case GET_TODAY_RESULT_SUCCESS:\n            return { ...state, todayResult: [...action.data] };\n        default:\n            return state;\n    }\n}\n","/**\n *  Imports\n */\n import {\n    GET_GAME_BETS_SUCCESS\n} from \"../actionConstants\";\n\n/** Initial State  */\nconst INITIAL_STATE = {\n    gameBetsList: [],\n    selectedGameBets: {}\n};\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case GET_GAME_BETS_SUCCESS:\n            return { ...state, gameBetsList: [...action.data.response] };\n        default:\n            return state;\n    }\n}\n","\nconst INITIAL_STATE = {\n  load: false,\n\terror: false,\n};\n\nexport default function fullLoader (state = INITIAL_STATE, actions) {\n\tif (actions.type.indexOf(\"_START\") > -1) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tload: true,\n\t\t};\n\t}\n\n\tif (actions.type.indexOf(\"_SUCCESS\") > -1) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tload: false,\n\t\t};\n\t}\n\n\tif (actions.type.indexOf(\"_FAILURE\") > -1) {\n\t\tif (actions.error && actions.error.code === \"ERROR_INVALID_TOKEN\") {\n      return {\n        error: true,\n        load: false,\n      };\n\t\t}\n\n    return {\n      ...state,\n      load: false,\n    }\n\t}\n\n\treturn state;\n}\n","import { Action, Reducer, combineReducers } from \"redux\";\nimport { sessionReducer } from \"redux-react-session\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport user from \"./userReducer\";\nimport wallets from \"./walletsReducer\";\nimport transactionHistory from \"./transactionHistoryReducer\"\nimport games from \"./gamesReducer\";\nimport gameBets from \"./gameBetsReducer\";\nimport loader from \"./loaderReducer\";\n\nconst appReducer = combineReducers({\n  user,\n  loader,\n  wallets,\n  transactionHistory,\n  games,\n  gameBets,\n  session: sessionReducer,\n  toastr: toastrReducer,\n});\n\nconst rootReducer = (state, action) => {\n  let newState = state;\n\n  // if (action.type === LOGOUT) {\n  //   newState = {};\n  // }\n\n  return appReducer(newState, action);\n};\n\n/** export this module */\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { sessionService } from \"redux-react-session\";\nimport LogRocket from \"logrocket\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport rootReducer from \"../reducers\";\nconst __DEV__ = true\n\nlet middleware = [ReduxThunk];\n\nconst logger = createLogger({\n  predicate: (getState, action) => __DEV__,\n  collapsed: true\n});\nmiddleware = [...middleware, logger, LogRocket.reduxMiddleware()];\n\nconst createRNReduxStore = applyMiddleware(...middleware)(createStore);\n\nconst store = createRNReduxStore(rootReducer);\n\nsessionService.initSessionService(store, { redirectPath: \"/login\", driver: 'LOCALSTORAGE' });\n\nexport default store;\n","/**\n * @function Calls the service and then dispatch action Object as a response to reducer.\n * @param service - Name of the Service that handles all the input parameters required to be pass in service.\n * @param actionTypeStart - type : action start\n * @param actionTypeSuccess - type : action Success\n * @param actionTypeFailure - type : action Failure\n * @returns {function()}\n * @constructor\n */\nimport { toastr } from \"react-redux-toastr\";\nimport React from \"react\";\n\nexport default function DispatchActionToReducer(\n  service,\n  actionTypeStart,\n  actionTypeSuccess,\n  actionTypeFailure,\n  callback\n) {\n  return dispatch => {\n    dispatch({\n      type: actionTypeStart\n    });\n    service\n      .then(result => {\n        if (result && (result.status === 200 || result.status === 201)) {\n          dispatch({\n            type: actionTypeSuccess,\n            data: result.data\n          });\n          if (callback) callback(null, result);\n        } else {\n          dispatch({\n            type: actionTypeFailure,\n            error: result\n          });\n        }\n      })\n      .catch(error => {\n        if (!error) {\n          toastr.error(\"Page not found\");\n          dispatch({\n            type: actionTypeFailure,\n            error\n          });\n          if (callback) callback(\"Page not found\");\n          return;\n        }\n\n        let errorStringTitle = \"Oops! Something went wrong.\";\n        let errorString = error.message || error.error;\n        toastr.error(errorStringTitle, {\n          component: () => (\n            <div dangerouslySetInnerHTML={{ __html: errorString }} />\n          )\n        });\n        dispatch({\n          type: actionTypeFailure,\n          error\n        });\n\n        if (callback) callback(error);\n      });\n  };\n}\n\nexport function SimpleDispatchActionToReducer(type, data, callback) {\n  return dispatch => {\n    dispatch({ type, data });\n    if (callback) callback();\n  };\n}\n","import axios from \"axios\";\nimport { sessionService } from \"redux-react-session\";\nimport hostConfig from \"../../config/hostConfig\";\nimport 'regenerator-runtime/runtime';\nimport { toastr } from \"react-redux-toastr\";\n\nexport const apiCall = async ({\n  method,\n  url,\n  data = null,\n  responseType\n}) => {\n  const urls = `${hostConfig.apiBaseUrl}/api${url}`;\n  function apiPromise(token) {\n    return axios({\n      method,\n      url: urls,\n      data: { ...data },\n      responseType,\n      crossDomain: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": '*',\n        Authorization: token\n      }\n    });\n  }\n\n  return sessionService\n    .loadSession()\n    .then(currentSession => {\n      return currentSession.sessionToken;\n    })\n    .catch(err => {\n      console.log(\"API ERROR 1:\", err);\n      throw err;\n    })\n    .then(token => {\n      return apiPromise(token);\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      if (\n        err &&\n        err.response &&\n        err.response.data\n      ) {\n        console.log(\"API ERROR:\", err.response.data);\n        toastr.error(\"Error accessing this data\", err);\n        throw err.response.data;\n      } else {\n        throw err;\n      }\n    });\n};\n\nexport const apiNoTokenCall = async ({\n  method,\n  url,\n  data = null,\n  responseType\n}) => {\n  const urls = `${hostConfig.apiBaseUrl}/api${url}`;\n  function apiPromise() {\n    return axios({\n      method,\n      url: urls,\n      data: { ...data },\n      responseType,\n      crossDomain: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": '*'\n      }\n    });\n  }\n  return apiPromise()\n    .then(res => {\n      console.log(\"res\", res);\n      return res;\n    })\n    .catch(err => {\n      console.log(\"API ERROR:\", err.response.data);\n      // throw err.response.data.errors;\n      throw err.response.data;\n    });\n};\n\nfunction encodeUriComponentWithKey(key, value) {\n  return `${key}=${encodeURIComponent(value)}`;\n}\nfunction createQueryParamComponent(key, value) {\n  let csv = '';\n  if (value) {\n    if (Array.isArray(value)) {\n      csv = value.map((valueItem) => encodeUriComponentWithKey(key, valueItem)).join('&');\n    } else {\n      csv = `${key}=${encodeURIComponent(value)}`;\n    }\n  }\n  return csv;\n}\nexport function createQueryParams(params) {\n  const queryParams = Object.keys(params).map((key) => createQueryParamComponent(key, params[key]))\n    // Remove the null, zero, undefined and empty string values\n    .filter(Boolean);\n\n  if (queryParams.length) {\n    return `?${queryParams.join('&')}`;\n  }\n  return '';\n}\n","const API = {\n  session: \"/network/session\",\n  network: \"/network/get\",\n  login: \"/users/signin\",\n  register: \"/users/signup\",\n  updateUser: \"/users/updateprofile\",\n  addMoneyToWallet: \"/transaction/requestMoney\",\n  usersList: \"/users/findUser\",\n  usersFilteredList: \"/users/usersFilteredList\",\n  usersTransactionsList: \"/subscription_transactions/usersTransactionsList\",\n  forgotpassword: \"/users/forgotpassword\",\n  getJobSeekerQuestionsList: \"/job_seekers_questions/getJobSeekerQuestionsList\",\n  getQuestions: \"/questions/getQuestions\",\n  createQuestions: \"/questions/createQuestion\",\n  updateQuestion: \"/questions/updateQuestion\",\n  createSurvey: \"/survey/createSurvey\",\n  getOffers: \"/offers/getOffers\",\n  getOffersStatusCount: \"/offers/getOffersCount_accStatus\",\n  createOffer: \"/offers/createOffer\",\n  acceptOffer: \"/offers/acceptOffer\",\n  createShortlisted: \"/shortList/createShortlisted\",\n  getShortlisted: \"/shortList/getShortlisted\",\n  removeShortlisted: \"/shortList/removeShortlisted\",\n  getMessages: \"/chat/getMessages\",\n  addMessages: \"/chat/addMessages\",\n  getWallets: \"/wallets/getWallets\",\n  updateWallets: \"/wallets/updateWallet/:id\",\n  getTransactionHistory: \"/transaction/getTransactionsHistory\",\n  getGameBets: \"/game_bets/getGameBets\",\n  getGames: \"/games/getGames\",\n  getTodayResult: \"/game_results/getLatestResult\",\n  addGame: \"/games/createGame\",\n  getGamesResult: \"/game_results/getResults\",\n  getGamesBets: \"/game_bets/getGameBets\",\n  getUserRequest: \"/transaction/getPendingRequest\",\n  approveRequest: \"/transaction/approveRequest\",\n  updateGameResults: \"/games/updateGame\"\n};\n\nexport default API;\n","/**\n *  Imports\n */\n\nimport { sessionService } from \"redux-react-session\";\nimport LogRocket from \"logrocket\";\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGIN_START,\n  LOGOUT,\n  SELECTED_USER,\n  USER_REGISTRATION_START,\n  USER_REGISTRATION_SUCCESS,\n  USER_REGISTRATION_FAILURE,\n  USER_UPDATE_START,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAILURE,\n  ADD_MONEY_WALLET_START,\n  ADD_MONEY_WALLET_SUCCESS,\n  ADD_MONEY_WALLET_FAILURE,\n  FORGOT_PASSWORD_START,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILURE,\n  USER_GET_START,\n  USER_GET_SUCCESS,\n  USER_GET_FAILURE,\n  USER_TRANSACTIONS_GET_START,\n  USER_TRANSACTIONS_GET_SUCCESS,\n  USER_TRANSACTIONS_GET_FAILURE,\n} from \"../actionConstants\";\n\nimport dispatchActionToReducer, {\n  SimpleDispatchActionToReducer\n} from \"../actionDispatcher\";\nimport {\n  login as loginService,\n  registerUser as registerUserService,\n  forgotPassword as forgotPasswordService,\n  updateUser as updateProfileService,\n  addMoneyToWallet as addMoneyToWalletService,\n  getUser as getUserListService,\n  getFilteredUserList as getFilteredUserListService,\n  getUserTransactions as getUserTransactionsService\n} from \"../services\";\n\nexport const login = (email, password, callback) => {\n  return dispatchActionToReducer(\n    loginService(email, password),\n    LOGIN_START,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    (error, res) => {\n      if (error) return;\n      else if (res !== undefined) {\n        sessionService\n          .saveSession({\n            sessionId: `${res.data.token}`,\n            sessionToken: `${res.data.token}`\n          })\n          .then(() => {\n            sessionService\n              .saveUser({\n                ...res.data\n              })\n              .then(() => {\n                if (callback) callback(res);\n              });\n          });\n      } else {\n        console.log(\"undefined response\");\n      }\n    }\n  );\n};\n\nexport const logout = (callback) => {\n  return SimpleDispatchActionToReducer(LOGOUT, null, callback);\n};\n\nexport function register(body, callback) {\n  return dispatchActionToReducer(\n    registerUserService(body),\n    USER_REGISTRATION_START,\n    USER_REGISTRATION_SUCCESS,\n    USER_REGISTRATION_FAILURE,\n    (error, res) => {\n      if (error) return;\n      else if (res !== undefined) {\n        sessionService\n          .saveSession({\n            sessionId: `${res.data.token}`,\n            sessionToken: `${res.data.token}`\n          })\n          .then(() => {\n            sessionService\n              .saveUser({\n                ...res.data\n              })\n              .then(() => {\n                if (callback) callback();\n              });\n          });\n      } else {\n        console.log(\"undefined response\");\n      }\n    }\n  );\n}\nexport const updateProfile = (body, callback) => {\n  return dispatchActionToReducer(\n    updateProfileService(body),\n    USER_UPDATE_START,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAILURE,\n    (error, res) => {\n      if (error) return;\n      else if (res !== undefined) {\n        sessionService\n          .saveUser({\n            ...res.data\n          })\n          .then(() => {\n            if (callback) callback(error, res);\n          });\n      } else {\n        console.log(\"undefined response\");\n      }\n    }\n  );\n};\nexport function forgotPassword(email, callback) {\n  return dispatchActionToReducer(\n    forgotPasswordService(email),\n    FORGOT_PASSWORD_START,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAILURE,\n    (error, res) => {\n      if (error) return;\n      else if (res !== undefined) {\n        if (callback) callback(error, res);\n      } else {\n        console.log(\"undefined response\");\n      }\n    }\n    //callback\n  );\n}\nexport const getUserList = (queryParam, callback) => {\n  return dispatchActionToReducer(\n    getUserListService(queryParam),\n    USER_GET_START,\n    USER_GET_SUCCESS,\n    USER_GET_FAILURE,\n    (error, res) => {\n      if (error) return;\n      else if (res !== undefined) {\n        if (callback) callback(error, res);\n      } else {\n        console.log(\"undefined response\");\n      }\n    }\n  );\n};\n\nexport const getFilteredUserList = (reqData, callback) => {\n  return dispatchActionToReducer(\n    getFilteredUserListService(reqData),\n    USER_GET_START,\n    USER_GET_SUCCESS,\n    USER_GET_FAILURE,\n    (error, res) => {\n      if (error) return;\n      else if (res !== undefined) {\n        if (callback) callback(error, res);\n      } else {\n        console.log(\"undefined response\");\n      }\n    }\n  );\n};\nexport const getUserTransactions = (reqData, callback) => {\n  return dispatchActionToReducer(\n    getUserTransactionsService(reqData),\n    USER_TRANSACTIONS_GET_START,\n    USER_TRANSACTIONS_GET_SUCCESS,\n    USER_TRANSACTIONS_GET_FAILURE,\n    (error, res) => {\n      if (error) return;\n      else if (res !== undefined) {\n        if (callback) callback(error, res);\n      } else {\n        console.log(\"undefined response\");\n      }\n    }\n  );\n};\n\nexport const setSelectedUser = (data, callback) => {\n  return SimpleDispatchActionToReducer(SELECTED_USER, data, callback);\n};\nexport const addMoneyToWallet = (body, callback) => {\n  return dispatchActionToReducer(\n    addMoneyToWalletService(body),\n    ADD_MONEY_WALLET_START,\n    ADD_MONEY_WALLET_SUCCESS,\n    ADD_MONEY_WALLET_FAILURE,\n    (error, res) => {\n      if (error) return;\n      else if (res !== undefined) {\n        sessionService\n          .saveUser({\n            ...res.data\n          })\n          .then(() => {\n            if (callback) callback(error, res);\n          });\n      } else {\n        console.log(\"undefined response\");\n      }\n    }\n  );\n};","import { sessionService } from \"redux-react-session\";\nimport { apiCall, apiNoTokenCall, createQueryParams } from \"../index\";\nimport hostConfig from \"./../../../config/hostConfig\";\nimport API from \"../serviceList\";\n\nexport function login(email, password) {\n  return apiNoTokenCall({\n    method: \"POST\",\n    url: `${API.login}`,\n    data: {\n      \"email\": email,\n      \"password\": password\n    }\n  });\n}\n\nexport function registerUser(reqData) {\n  return apiNoTokenCall({\n    method: \"POST\",\n    url: `${API.register}`,\n    data: reqData\n  });\n}\n\nexport function updateUser(reqData) {\n  return apiCall({\n    method: \"PUT\",\n    url: `${API.updateUser}`,\n    data: reqData\n  });\n}\nexport function addMoneyToWallet(reqData) {\n  return apiCall({\n    method: \"POST\",\n    url: `${API.addMoneyToWallet}`,\n    data: reqData\n  });\n}\n\nexport function forgotPassword(email) {\n  let url = `${API.forgotpassword}`;\n  return apiNoTokenCall({\n    method: \"POST\",\n    url: url,\n    data: {\n      'email': email,\n      \"origin\": `${hostConfig.origin}`\n    }\n  });\n}\nexport function getUser(queryParm) {\n  let query = createQueryParams(queryParm);\n  return apiCall({\n    method: \"GET\",\n    url: `${API.usersList}${query}`,\n  });\n}\n\nexport function getFilteredUserList(reqData) {\n  return apiCall({\n    method: \"POST\",\n    url: `${API.usersFilteredList}`,\n    data: reqData\n  });\n}\nexport function getUserTransactions(reqData) {\n  return apiCall({\n    method: \"POST\",\n    url: `${API.usersTransactionsList}`,\n    data: reqData\n  });\n}\n\n","import { sessionService } from \"redux-react-session\";\nimport {\n    GET_WALLETS_START,\n    GET_WALLETS_SUCCESS,\n    GET_WALLETS_FAILURE,\n    SET_WALLETS_DATA\n} from \"../actionConstants\";\n\nimport dispatchActionToReducer, {\n    SimpleDispatchActionToReducer\n} from \"../actionDispatcher\";\n\nimport {\n    getWallets as getWalletsService\n} from \"../services\";\n\nexport const setWallets = (data, callback) => {\n    return SimpleDispatchActionToReducer(SET_WALLETS_DATA, data, callback);\n};\n\nexport const getWallets = (query, callback) => {\n    return dispatchActionToReducer(\n        getWalletsService(query),\n        GET_WALLETS_START,\n        GET_WALLETS_SUCCESS,\n        GET_WALLETS_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(null, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n};","import { apiCall, createQueryParams } from \"../index\";\nimport API from \"../serviceList\";\n\n\nexport function getWallets(queryParm) {\n    let query = createQueryParams(queryParm);\n    return apiCall({\n        method: \"GET\",\n        url: `${API.getWallets}${query}`,\n    });\n}\n\nexport function updateWallets(queryParm) {\n    let query = createQueryParams(queryParm);\n    return apiCall({\n        method: \"PUT\",\n        url: `${API.updateWallets}${query}`,\n    });\n}","import { sessionService } from \"redux-react-session\";\nimport {\n    GET_TRANSACTIONS_HISTORY_START,\n    GET_TRANSACTIONS_HISTORY_SUCCESS,\n    GET_TRANSACTIONS_HISTORY_FAILURE,\n    SET_TRANSACTIONS_HISTORY_DATA,\n    GET_USER_REQUEST_START,\n    GET_USER_REQUEST_SUCCESS,\n    GET_USER_REQUEST_FAILURE,\n    UPDATE_USER_REQUEST_START,\n    UPDATE_USER_REQUEST_SUCCESS,\n    UPDATE_USER_REQUEST_FAILURE,\n} from \"../actionConstants\";\n\nimport dispatchActionToReducer, {\n    SimpleDispatchActionToReducer\n} from \"../actionDispatcher\";\n\nimport {\n    getTransactionHistory as getTransactionHistoryService,\n    getUserRequest as getUserRequestService,\n    updateUserRequest as updateUserRequestService\n} from \"../services\";\n\nexport const setTransactionHistory = (data, callback) => {\n    return SimpleDispatchActionToReducer(SET_TRANSACTIONS_HISTORY_DATA, data, callback);\n};\n\nexport const getTransactionHistory = (query, callback) => {\n    return dispatchActionToReducer(\n        getTransactionHistoryService(query),\n        GET_TRANSACTIONS_HISTORY_START,\n        GET_TRANSACTIONS_HISTORY_SUCCESS,\n        GET_TRANSACTIONS_HISTORY_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(null, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n};\nexport const getUserRequest = (query, callback) => {\n    return dispatchActionToReducer(\n        getUserRequestService(query),\n        GET_USER_REQUEST_START,\n        GET_USER_REQUEST_SUCCESS,\n        GET_USER_REQUEST_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(null, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n}\nexport const updateUserRequest = (updatData, callback) => {\n    return dispatchActionToReducer(\n        updateUserRequestService(updatData),\n        UPDATE_USER_REQUEST_START,\n        UPDATE_USER_REQUEST_SUCCESS,\n        UPDATE_USER_REQUEST_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(null, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n}","import { apiCall, createQueryParams } from \"../index\";\nimport API from \"../serviceList\";\n\n\nexport function getTransactionHistory(queryParm) {\n    let query = createQueryParams(queryParm);\n    return apiCall({\n        method: \"GET\",\n        url: `${API.getTransactionHistory}${query}`,\n    });\n}\nexport function getUserRequest(queryParm) {\n    let query = createQueryParams(queryParm);\n    return apiCall({\n        method: \"GET\",\n        url: `${API.getUserRequest}${query}`,\n    });\n}\nexport function updateUserRequest(userData) {\n    return apiCall({\n        method: \"PUT\",\n        url: `${API.approveRequest}`,\n        data: userData\n    });\n}","import { sessionService } from \"redux-react-session\";\nimport {\n    GET_GAMES_START,\n    GET_GAMES_SUCCESS,\n    GET_GAMES_FAILURE,\n    GET_GAMES_BETS_START,\n    GET_GAMES_BETS_SUCCESS,\n    GET_GAMES_BETS_FAILURE,\n    ADD_GAMES_START,\n    ADD_GAMES_SUCCESS,\n    ADD_GAMES_FAILURE,\n    UPDATE_GAME_RESULTS_START,\n    UPDATE_GAME_RESULTS_SUCCESS,\n    UPDATE_GAME_RESULTS_FAILURE,\n    GET_GAME_RESULTS_START,\n    GET_GAME_RESULTS_SUCCESS,\n    GET_GAME_RESULTS_FAILURE,\n    GET_TODAY_RESULT_START,\n    GET_TODAY_RESULT_SUCCESS,\n    GET_TODAY_RESULT_FAILURE,\n} from \"../actionConstants\";\n\nimport dispatchActionToReducer, {\n    SimpleDispatchActionToReducer\n} from \"../actionDispatcher\";\n\nimport {\n    getGames as getGamesService,\n    getTodayResult as getTodayResultService,\n    addGame as addGameService,\n    getGamesBets as getGamesBetsService,\n    updateGameResults as updateGameResultsService,\n    getGamesResult as getGamesResultService,\n} from \"../services\";\n\nexport const getGames = (query, callback) => {\n    return dispatchActionToReducer(\n        getGamesService(query),\n        GET_GAMES_START,\n        GET_GAMES_SUCCESS,\n        GET_GAMES_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(null, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n};\nexport const getTodayResult = (query, callback) => {\n    return dispatchActionToReducer(\n        getTodayResultService(query),\n        GET_TODAY_RESULT_START,\n        GET_TODAY_RESULT_SUCCESS,\n        GET_TODAY_RESULT_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(null, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n};\n\nexport function addGame(body, callback) {\n    return dispatchActionToReducer(\n        addGameService(body),\n        ADD_GAMES_START,\n        ADD_GAMES_SUCCESS,\n        ADD_GAMES_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(error, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n}\n\nexport function updateGameResults(body, callback) {\n    return dispatchActionToReducer(\n        updateGameResultsService(body),\n        UPDATE_GAME_RESULTS_START,\n        UPDATE_GAME_RESULTS_SUCCESS,\n        UPDATE_GAME_RESULTS_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(error, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n}\n\nexport const getGamesBets = (query, callback) => {\n    return dispatchActionToReducer(\n        getGamesBetsService(query),\n        GET_GAMES_BETS_START,\n        GET_GAMES_BETS_SUCCESS,\n        GET_GAMES_BETS_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(null, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n};\nexport const getGameResults = (query, callback) => {\n    return dispatchActionToReducer(\n        getGamesResultService(query),\n        GET_GAME_RESULTS_START,\n        GET_GAME_RESULTS_SUCCESS,\n        GET_GAME_RESULTS_FAILURE,\n        (error, res) => {\n            if (error) return;\n            else if (res !== undefined) {\n                if (callback) callback(null, res);\n            } else {\n                console.log(\"undefined response\");\n            }\n        }\n    );\n};\n","import { apiCall, apiNoTokenCall, createQueryParams } from \"../index\";\nimport API from \"../serviceList\";\n\n\nexport function getTodayResult(queryParm) {\n  let query = createQueryParams(queryParm);\n  return apiCall({\n    method: \"GET\",\n    url: `${API.getTodayResult}${query}`,\n  });\n}\n\nexport function getGames(queryParm) {\n  let query = createQueryParams(queryParm);\n  return apiCall({\n    method: \"GET\",\n    url: `${API.getGames}${query}`,\n  });\n}\nexport function getGamesBets(queryParm) {\n  let query = createQueryParams(queryParm);\n  return apiCall({\n    method: \"GET\",\n    url: `${API.getGamesBets}${query}`,\n  });\n}\nexport function addGame(reqData) {\n  return apiCall({\n    method: \"POST\",\n    url: `${API.addGame}`,\n    data: reqData\n  });\n}\nexport function updateGameResults(reqData) {\n  return apiCall({\n    method: \"PUT\",\n    url: `${API.updateGameResults}/${reqData._id}`,\n    data: reqData\n  });\n}\nexport function getGamesResult(queryParm) {\n  let query = createQueryParams(queryParm);\n  return apiCall({\n    method: \"GET\",\n    url: `${API.getGamesResult}${query}`,\n  });\n}","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, withRouter} from \"react-router-dom\";\nimport { sessionService } from 'redux-react-session';\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media,\n} from \"reactstrap\";\nimport { logout } from \"../../redux/actions\";\n\nconst AdminNavbar = (props) => {\n  \n  const dispatch = useDispatch();\n  const handleLogout = (e) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to logout?')) {\n      dispatch(logout(() => {\n        sessionService.deleteSession()\n          .then(() => sessionService.deleteUser())\n          .then(() => {\n            window.location.href = '/';\n          });\n      }));\n    }\n  }\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n        <Container fluid>\n          <Link\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            to=\"/\"\n          >\n            {props.brandText}\n          </Link>\n          <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n            <FormGroup className=\"mb-0\">\n              <InputGroup className=\"input-group-alternative\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <i className=\"fas fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input placeholder=\"Search\" type=\"text\" />\n              </InputGroup>\n            </FormGroup>\n          </Form>\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle className=\"pr-0\" nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/theme/team-4-800x800.jpg\")\n                          .default\n                      }\n                    />\n                  </span>\n                  <Media className=\"ml-2 d-none d-lg-block\">\n                    <span className=\"mb-0 text-sm font-weight-bold\">\n                      {props.first_name} {props.last_name}\n                    </span>\n                  </Media>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={(e) => handleLogout(e)}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return state.session.user;\n}\n\nexport default withRouter(connect(mapStateToProps, {})(AdminNavbar));\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Row className=\"align-items-center justify-content-xl-between\">\n        <Col xl=\"6\">\n          <div className=\"copyright text-center text-xl-left text-muted\">\n            © {new Date().getFullYear()}{\" \"}\n            <a\n              className=\"font-weight-bold ml-1\"\n              href=\"https://www.creative-tim.com?ref=adr-admin-footer\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Creative Tim\n            </a>\n          </div>\n        </Col>\n\n        <Col xl=\"6\">\n          <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n            <NavItem>\n              <NavLink\n                href=\"https://www.creative-tim.com?ref=adr-admin-footer\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Creative Tim\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink\n                href=\"https://www.creative-tim.com/presentation?ref=adr-admin-footer\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                About Us\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink\n                href=\"http://blog.creative-tim.com?ref=adr-admin-footer\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Blog\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink\n                href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-admin-footer\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                MIT License\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Col>\n      </Row>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React, { useState } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nvar ps;\n\nconst Sidebar = (props) => {\n  const [collapseOpen, setCollapseOpen] = useState();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // toggles collapse between opened and closed (true/false)\n  const toggleCollapse = () => {\n    setCollapseOpen((data) => !data);\n  };\n  // closes the collapse\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  };\n  // creates the links that appear in the left menu / Sidebar\n  const createLinks = (routes) => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n\n  const { bgColor, routes, logo } = props;\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link,\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\",\n    };\n  }\n\n  return (\n    <Navbar\n      className=\"navbar-vertical fixed-left navbar-light bg-white\"\n      expand=\"md\"\n      id=\"sidenav-main\"\n    >\n      <Container fluid>\n        {/* Toggler */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          onClick={toggleCollapse}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* Brand */}\n        {logo ? (\n          <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n            <img\n              alt={logo.imgAlt}\n              className=\"navbar-brand-img\"\n              src={logo.imgSrc}\n            />\n          </NavbarBrand>\n        ) : null}\n        {/* User */}\n        <Nav className=\"align-items-center d-md-none\">\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav className=\"nav-link-icon\">\n              <i className=\"ni ni-bell-55\" />\n            </DropdownToggle>\n            <DropdownMenu\n              aria-labelledby=\"navbar-default_dropdown_1\"\n              className=\"dropdown-menu-arrow\"\n              right\n            >\n              <DropdownItem>Action</DropdownItem>\n              <DropdownItem>Another action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Something else here</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav>\n              <Media className=\"align-items-center\">\n                <span className=\"avatar avatar-sm rounded-circle\">\n                  <img\n                    alt=\"...\"\n                    src={\n                      require(\"../../assets/img/theme/team-1-800x800.jpg\")\n                        .default\n                    }\n                  />\n                </span>\n              </Media>\n            </DropdownToggle>\n            <DropdownMenu className=\"dropdown-menu-arrow\" right>\n              <DropdownItem className=\"noti-title\" header tag=\"div\">\n                <h6 className=\"text-overflow m-0\">Welcome!</h6>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-single-02\" />\n                <span>My profile</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-settings-gear-65\" />\n                <span>Settings</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-calendar-grid-58\" />\n                <span>Activity</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-support-16\" />\n                <span>Support</span>\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                <i className=\"ni ni-user-run\" />\n                <span>Logout</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        {/* Collapse */}\n        <Collapse navbar isOpen={collapseOpen}>\n          {/* Collapse header */}\n          <div className=\"navbar-collapse-header d-md-none\">\n            <Row>\n              {logo ? (\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  {logo.innerLink ? (\n                    <Link to={logo.innerLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </Link>\n                  ) : (\n                    <a href={logo.outterLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </a>\n                  )}\n                </Col>\n              ) : null}\n              <Col className=\"collapse-close\" xs=\"6\">\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={toggleCollapse}\n                >\n                  <span />\n                  <span />\n                </button>\n              </Col>\n            </Row>\n          </div>\n          {/* Form */}\n          <Form className=\"mt-4 mb-3 d-md-none\">\n            <InputGroup className=\"input-group-rounded input-group-merge\">\n              <Input\n                aria-label=\"Search\"\n                className=\"form-control-rounded form-control-prepended\"\n                placeholder=\"Search\"\n                type=\"search\"\n              />\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <span className=\"fa fa-search\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n          {/* Navigation */}\n          <Nav navbar>{createLinks(routes)}</Nav>\n          {/* Divider */}\n          <hr className=\"my-3\" />\n          {/* Heading */}\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport { getTodayResult, getWallets, getTransactionHistory, getUserRequest, getGamesBets } from \"../../redux/actions\";\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nconst Header = (props) => {\n  const { todayResult } = props.games;\n  const { walletsList } = props.wallets;\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [totalAddLAmount, setTotalAddedAmount] = useState(0);\n  const [totalWithdrwalAmount, setTotalWithdrwalAmount] = useState(0);\n  const [pendingRequest, setPendingRequest] = useState(0);\n  const [lastBid, setLastBid] = useState(0);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getTodayResult({}, (errors, res) => {\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n    dispatch(getWallets({}, (errors, res) => {\n      let total = 0;\n      res.data.forEach((wallet) => {\n        total = wallet.total_amount ? wallet.total_amount + total : total;\n      })\n      setTotalAmount(total);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n    dispatch(getTransactionHistory({}, (errors, res) => {\n      let wtotal = 0;\n      let atotal = 0;\n      res.data.forEach((wallet) => {\n        wtotal = (wallet.amount && wallet.transaction_status === 'approved' && wallet.transaction_type === 'debit') ? wallet.amount + wtotal : wtotal;\n        atotal = (wallet.amount && wallet.transaction_status === 'approved' && wallet.transaction_type === 'credit') ? wallet.amount + atotal : atotal;\n      })\n      setTotalAddedAmount(atotal);\n      setTotalWithdrwalAmount(wtotal);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n    dispatch(getUserRequest({}, (errors, res) => {\n      let total = res.data.length + pendingRequest;\n      setPendingRequest(total);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n    dispatch(getUserRequest({ transaction_type: 'credit' }, (errors, res) => {\n      let total = res.data.length + pendingRequest;\n      setPendingRequest(total);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n    dispatch(getGamesBets({}, (errors, res) => {\n      let lastINdex = res.data.length ? res.data[res.data.length - 1] : {};\n      setLastBid(lastINdex);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }, []);\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            {/* Card stats */}\n            <Row>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Today Add Money\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                          {totalAddLAmount}\n                        </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-bar\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        {/* <i className=\"fa fa-arrow-up\" /> 3.48% */}\n                      </span>{\" \"}\n                      {/* <span className=\"text-nowrap\">Since last month</span> */}\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Total withdrawal\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\"> {totalWithdrwalAmount}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-pie\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n                        {/* <i className=\"fas fa-arrow-down\" /> 3.48% */}\n                      </span>{\" \"}\n                      {/* <span className=\"text-nowrap\">Since last week</span> */}\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Latest Result\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{todayResult.length ? todayResult[0]?.winning_bet_number : ''}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                          <i className=\"fas fa-users\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-nowrap\">{todayResult.length ? todayResult[0].created_at : ''}</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Total Amount\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{totalAmount}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        {/* <i className=\"fas fa-arrow-up\" /> 12% */}\n                      </span>{\" \"}\n                      {/* <span className=\"text-nowrap\">Since last month</span> */}\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n            <Row className=\"pt-5\">\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Pending Request\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{pendingRequest}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        {/* <i className=\"fas fa-arrow-up\" /> 12% */}\n                      </span>{\" \"}\n                      {/* <span className=\"text-nowrap\">Since last month</span> */}\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Last Commission\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">49,65%</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        <i className=\"fas fa-arrow-up\" /> 12%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Last Budding\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{todayResult.length ? todayResult[0]?.last_user_bid : ''}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        <i className=\"fas fa-arrow-up\" /> 12%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Last Winning\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{todayResult.length ? todayResult[0]?.winning_amount : ''}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        <i className=\"fas fa-arrow-up\" /> 12%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n  return {\n    games: state.games,\n    wallets: state.wallets\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(Header));","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2,\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nconst Index = (props) => {\n  const [activeNav, setActiveNav] = useState(1);\n  const [chartExample1Data, setChartExample1Data] = useState(\"data1\");\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  const toggleNavs = (e, index) => {\n    e.preventDefault();\n    setActiveNav(index);\n    setChartExample1Data(\"data\" + index);\n  };\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"bg-gradient-default shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                      Overview\n                    </h6>\n                    <h2 className=\"text-white mb-0\">Sales value</h2>\n                  </div>\n                  <div className=\"col\">\n                    <Nav className=\"justify-content-end\" pills>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 1,\n                          })}\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 1)}\n                        >\n                          <span className=\"d-none d-md-block\">Month</span>\n                          <span className=\"d-md-none\">M</span>\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 2,\n                          })}\n                          data-toggle=\"tab\"\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 2)}\n                        >\n                          <span className=\"d-none d-md-block\">Week</span>\n                          <span className=\"d-md-none\">W</span>\n                        </NavLink>\n                      </NavItem>\n                    </Nav>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                <div className=\"chart\">\n                  <Line\n                    data={chartExample1[chartExample1Data]}\n                    options={chartExample1.options}\n                    getDatasetAtEvent={(e) => console.log(e)}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                      Performance\n                    </h6>\n                    <h2 className=\"mb-0\">Total orders</h2>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                <div className=\"chart\">\n                  <Bar\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Page visits</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Page name</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\">Unique users</th>\n                    <th scope=\"col\">Bounce rate</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">/argon/</th>\n                    <td>4,569</td>\n                    <td>340</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/index.html</th>\n                    <td>3,985</td>\n                    <td>319</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/charts.html</th>\n                    <td>3,513</td>\n                    <td>294</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      36,49%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/tables.html</th>\n                    <td>2,050</td>\n                    <td>147</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 50,87%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/profile.html</th>\n                    <td>1,795</td>\n                    <td>190</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Social traffic</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Referral</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>1,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">60%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"60\"\n                            barClassName=\"bg-gradient-danger\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>5,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">70%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"70\"\n                            barClassName=\"bg-gradient-success\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Google</th>\n                    <td>4,807</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">80%</span>\n                        <div>\n                          <Progress max=\"100\" value=\"80\" />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Instagram</th>\n                    <td>3,678</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">75%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"75\"\n                            barClassName=\"bg-gradient-info\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">twitter</th>\n                    <td>2,645</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">30%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"30\"\n                            barClassName=\"bg-gradient-warning\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport moment from 'moment';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { addGame, getGames } from \"../../redux/actions\";\nimport { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, TableFooter, TablePagination } from \"@material-ui/core\";\nimport { Tab } from \"bootstrap\";\n\nconst Game = (props) => {\n  const { gamesList } = props.games;\n  const dispatch = useDispatch();\n  const [gameData, setGameData] = useState([...gamesList])\n  const [state, setState] = useState({\n    game_name: \"\",\n    start_date: Date.now(),\n    end_date: Date.now(),\n    submitted: false,\n  });\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const [filter, setFilter] = useState({\n    filterS: {\n      status: ''\n    }\n  });\n\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getGames({}, (errors, res) => {\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }, []);\n\n  const getSearchGame = (e) => {\n    e.preventDefault();\n    setSearchText(e.target.value);\n    if (e.target.value) {\n      let games = gameData.filter(game => {\n        let search = (e.target.value).toLowerCase()\n        return game.game_name && JSON.stringify(game.game_name).toLowerCase().includes(search)\n      });\n      setGameData([...games]);\n    } else {\n      setGameData([...gamesList]);\n    }\n\n  };\n\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    const { id, value } = e.target;\n    setFilter(prevState => ({\n      ...prevState,\n      filterS: {\n        ...filter.filterS,\n        [id]: value,\n      }\n    }));\n    console.log(filter.filterS, \"STATUSSS\");\n  };\n\n  const getGameData = (query = {}) => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getGames(query, (errors, res) => {\n      setGameData(res.response);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    if (id === id) {\n      setState(prevState => ({\n        ...prevState,\n        [id]: value,\n      }));\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        [id]: value\n      }));\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setState(prevState => ({\n      ...prevState,\n      submitted: true\n    }));\n    let reqData = {\n      game_name: state.game_name,\n      start_date: state.start_date,\n      end_date: state.end_date\n    }\n    if (reqData) {\n      dispatch(addGame(reqData, (errors, res) => {\n        if (res && res.status == 200) {\n          getGames();\n          setState(prevState => ({\n            ...prevState,\n            submitted: true\n          }));\n        }\n      }));\n    }\n  };\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - gameData.length) : 0;\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0 text-center\">Add Game</h3>\n              </CardHeader>\n              <CardBody>\n                <Form role=\"form\">\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-ui-04\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"text\"\n                        autoComplete=\"new-name\"\n                        value={state.game_name}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        id=\"game_name\"\n                        placeholder=\"Enter Game Name\"\n                        name=\"game_name\"\n                        required\n                      />\n                    </InputGroup>\n                    {\n                      state.submitted && !state.game_name &&\n                      <div className=\"error\">Game name is required</div>\n                    }\n                  </FormGroup>\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-calendar-grid-58\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <input\n                        type=\"datetime-local\"\n                        autoComplete=\"new-sdate\"\n                        className=\"form-control\"\n                        id=\"start_date\"\n                        placeholder=\"Enter Start Date\"\n                        name=\"password\"\n                        value={state.start_date}\n                        onChange={handleChange}\n                        required\n                      />\n                    </InputGroup>\n                    {\n                      state.submitted && !state.start_date &&\n                      <div className=\"error\">Start Date is required</div>\n                    }\n                  </FormGroup>\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-calendar-grid-58\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <input\n                        type=\"datetime-local\"\n                        autoComplete=\"new-edate\"\n                        className=\"form-control\"\n                        id=\"end_date\"\n                        placeholder=\"Enter End Date\"\n                        name=\"end_date\"\n                        value={state.end_date}\n                        onChange={handleChange}\n                        required\n                      />\n                    </InputGroup>\n                    {\n                      state.submitted && !state.end_date &&\n                      <div className=\"error\">End Date is required</div>\n                    }\n                  </FormGroup>\n                  <div className=\"text-center\">\n                    <Button disabled={!(state.game_name && state.start_date && state.end_date)} onClick={handleSubmit} className=\"my-4\" color=\"primary\" type=\"button\">\n                      Add Game\n                    </Button>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n\n\n        {/* Dark table */}\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">Games List</h3>\n                <div className=\"d-flex mt-2\">\n                  <InputGroup size=\"sm\" className=\"w-50\">\n                    <Input\n                      type=\"text\"\n                      name=\"\"\n                      value={searchText || \"\"}\n                      onChange={getSearchGame}\n                      placeholder=\"Search.....\"\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                      <Button className=\"bg-default shadow\"><i className=\"fas fa-search text-white\" /></Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      type=\"select\"\n                      value={filter.filterS.status}\n                      onChange={handleFilterChange}\n                      id=\"status\"\n                      name=\"status\"\n                      required>\n                      <option key=\"select\" value=\"\">Select Status</option>\n                      <option key=\"active\" value=\"active\">Active</option>\n                      <option key=\"inactive\" value=\"inactive\">Inactive</option>\n                    </Input>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input type=\"Button\" onClick={() => getGameData({ ...filter.filterS })} className=\"bg-default text-white\" value={\"Search\"}></Input>\n                  </InputGroup>\n                </div>\n              </CardHeader>\n              <TableContainer>\n                <Table className=\"align-items-center table-dark table-flush\"\n                  responsive>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"text-white\">Game Name</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Start Date</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">End Date</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\"> Status</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {gameData && gameData.length ?\n                      gameData\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                      .map((list, index) => {\n                        return (\n                          <TableRow>\n                            <TableCell className=\"text-white\" >{list.game_name}</TableCell>\n                            <TableCell className=\"text-white\" align=\"center\">{moment(list.start_date).format('MM-DD-YYYY, h:mm a')}</TableCell>\n                            <TableCell className=\"text-white\" align=\"center\">{moment(list.end_date).format('MM-DD-YYYY, h:mm a')}</TableCell>\n                            <TableCell className=\"text-white\" align=\"center\">{list?.status ? (list?.status).toUpperCase() : '-'}</TableCell>\n                          </TableRow>\n                        )\n                      }) : ''\n                    }\n                    {emptyRows > 0 && (\n                      <TableRow\n                        style={{\n                          height: (53) * emptyRows,\n                        }}\n                      >\n                        <TableCell colSpan={6} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                  <TableFooter>\n                    <TableRow>\n                      <TablePagination\n                        className=\"text-white\"\n                        rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                        colSpan={5}\n                        count={gameData.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage} />\n                    </TableRow>\n                  </TableFooter>\n                </Table>\n              </TableContainer>\n              {/* <Table\n                className=\"align-items-center table-dark table-flush\"\n                responsive\n              >\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">Game Name</th>\n                    <th scope=\"col\">Start Date</th>\n                    <th scope=\"col\">End Date</th>\n                    <th scope=\"col\" >Status </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {gameData && gameData.length ?\n                    gameData.map((list, index) => {\n                      return (\n                        <tr>\n                          <td>{list.game_name}</td>\n                          <td>{moment(list.start_date).format('MM-DD-YYYY, h:mm a')}</td>\n                          <td>{moment(list.end_date).format('MM-DD-YYYY, h:mm a')}</td>\n                          <td>{list?.status ? (list?.status).toUpperCase() : '-'}</td>\n                        </tr>\n                      )\n                    }) : ''\n                  }\n                </tbody>\n              </Table> */}\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.session.user,\n    games: state.games\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(Game));\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport moment from 'moment';\nimport { connect, useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\n\n// reactstrap components\nimport {\n    Card,\n    CardHeader,\n    Table,\n    Container,\n    Row,\n    Button,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { getGames, getGamesBets, getUserList, getWallets } from \"../../redux/actions\";\nconst GameBets = (props) => {\n    const { userList } = props;\n    const { gameBets, gamesList } = props.games;\n    const { walletsList } = props.wallets;\n    let walletData = walletsList.filter((wallet) => {\n        return wallet?.phone_number\n    })\n    const dispatch = useDispatch();\n    const [filter, setFilter] = useState({\n        filterS: {\n            game_id: \"\",\n            user_id: \"\",\n            amount: \"\",\n            min: \"\",\n            max: \"\",\n            createdDate: moment(new Date()).format('YYYY-MM-DD'),\n        },\n    });\n    const [hrows, setHRowsCount] = useState([\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\"]);\n    const [vrows, setVRowsCount] = useState([\"01\", \"11\", \"21\", \"31\", \"41\", \"51\", \"61\", \"71\", \"81\", \"91\"]);\n    const [singleRows, setSingleRowsCount] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    const [inputValues, setInputValues] = useState({});\n    const [resultValues, setResultValues] = useState({});\n    const [andarValues, setAndarValues] = useState({});\n    const [baharValues, setBaharValues] = useState({});\n    const [totalbat, setTotalBat] = useState(0);\n    const [totalandar, setTotalAndar] = useState(0);\n    const [totalbahar, setTotalBahar] = useState(0);\n\n    useEffect(() => {\n        dispatch({ type: 'LOADING_START' });\n        dispatch(getGames((errors, res) => {\n        }));\n        dispatch(getUserList((errors, res) => {\n        }));\n        dispatch(getWallets({}, (errors, res) => {\n        }));\n        getGameBetsData({ ...filter.filterS });\n    }, []);\n    const filterOptions = createFilterOptions({\n        ignoreCase: false,\n        ignoreAccents: false,\n    });\n    const getGameBetsData = (query = {}) => {\n        setHRowsCount([]);\n        setVRowsCount([]);\n        setSingleRowsCount([])\n        dispatch(getGamesBets(query, (errors, res) => {\n            var values = {};\n            var inside_bets = {};\n            var outside_bets = {};\n            if (res.data.length) {\n                res.data.forEach(element => {\n                    if (element.bets.length) {\n                        element.bets.forEach((bets) => {\n                            let targetNUmber = bets.bet_number;\n                            for (let item of vrows) {\n                                let sum = 0;\n                                for (let sitem of hrows) {\n                                    let currentNUmber = Number(item) + Number(sitem) - 1;\n                                    if (currentNUmber === targetNUmber) {\n                                        values[`${sitem}_${item}`] = values[`${sitem}_${item}`] ? values[`${sitem}_${item}`] + bets.bet_amount : bets.bet_amount;\n                                    }\n                                }\n                            }\n                        })\n                    }\n                    if (element.inside_bets.length) {\n                        element.inside_bets.forEach((bets) => {\n                            let targetNUmber = bets.bet_number;\n                            inside_bets[`andar_${targetNUmber}`] = !isNaN(inside_bets[targetNUmber]) ? inside_bets[targetNUmber] + bets.bet_amount : bets.bet_amount;\n                        })\n                    }\n                    if (element.outside_bets.length) {\n                        element.outside_bets.forEach((bets) => {\n                            let targetNUmber = bets.bet_number;\n                            outside_bets[`bahar_${targetNUmber}`] = !isNaN(outside_bets[targetNUmber]) ? outside_bets[targetNUmber] + bets.bet_amount : bets.bet_amount;\n                        })\n                    }\n                });\n                setInputValues(values);\n                setAndarValues(inside_bets);\n                setBaharValues(outside_bets);\n\n            } else {\n                setInputValues({});\n                setAndarValues({});\n                setBaharValues({});\n            }\n            dispatch({ type: 'LOADING_SUCCESS' });\n            setHRowsCount([\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\"]);\n            setVRowsCount([\"01\", \"11\", \"21\", \"31\", \"41\", \"51\", \"61\", \"71\", \"81\", \"91\"]);\n            setSingleRowsCount([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n        }));\n    }\n    console.log(inputValues, andarValues, baharValues, \"hi here\");\n    useEffect(() => {\n        calculateSumValues();\n    }, [inputValues, andarValues, baharValues]);\n\n    // main table input value change\n    const onRowValueChange = ({ target }) => {\n        var values = _.cloneDeep(inputValues);\n        values[target.name] = target.value;\n        setInputValues(values);\n    };\n\n    const onAndarValueChange = ({ target }) => {\n        var values = _.cloneDeep(andarValues);\n        values[target.name] = target.value;\n        const total = Object.keys(values).map((key) => values[key]).reduce((totalValue, item) => totalValue + Number(item), 0);\n        setTotalAndar(total);\n        setAndarValues(values);\n    };\n\n    const onBaharValueChange = ({ target }) => {\n        var values = _.cloneDeep(baharValues);\n        values[target.name] = target.value;\n        const total = Object.keys(values).map((key) => values[key]).reduce((totalValue, item) => totalValue + Number(item), 0);\n        setTotalBahar(total);\n        setBaharValues(values);\n    };\n\n    //calculate sum for main table vertical rows\n    const calculateSumValues = () => {\n        var values = _.cloneDeep(resultValues);\n        for (let item of vrows) {\n            let sum = 0;\n            for (let sitem of hrows) {\n                sum = !isNaN(inputValues[`${sitem}_${item}`]) ? (sum + Number(inputValues[`${sitem}_${item}`])) : sum;\n            }\n            values[\"result_\" + item] = sum;\n        }\n        const total = Object.keys(values).map((key) => values[key]).reduce((totalValue, item) => totalValue + item, 0);\n        let baharTotal = 0;\n        let anderTotal = 0;\n        if (Object.keys(andarValues).length) {\n            anderTotal = Object.keys(andarValues).map((key) => andarValues[key]).reduce((totalValue, item) => totalValue + Number(item), 0);\n        }\n        if (Object.keys(baharValues).length) {\n            baharTotal = Object.keys(baharValues).map((key) => baharValues[key]).reduce((totalValue, item) => totalValue + Number(item), 0);\n        }\n\n        setTotalBahar(baharTotal);\n        setTotalAndar(anderTotal);\n        setTotalBat(total);\n        setResultValues(values);\n    };\n    const handleFilterChange = (e) => {\n        e.preventDefault();\n        var filterS = {\n            status: e.currentTarget.getAttribute(\"dropdownvalue\")\n        }\n        setFilter(prevState => ({\n            ...prevState,\n            filter: filterS\n        }));\n        console.log(filter.status, \"STATUSSS\");\n    };\n    const handleChange = (e) => {\n        const { id, value } = e.target;\n        setFilter((prevState) => ({\n            ...prevState,\n            filterS: {\n                ...filter.filterS,\n                [id]: value,\n            },\n        }));\n    };\n    return (\n        <>\n            <Header />\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                {/* Dark table */}\n                <Row className=\"mt-5\">\n                    <div className=\"col \">\n                        <Card className=\"shadow\">\n                            <CardHeader className=\"bg-transparent border-0\">\n                                <h3 className=\"mb-0\">Games Bets</h3>\n                                <div className=\"d-flex mt-2\">\n                                    <InputGroup size=\"sm\" className=\"w-25\">\n                                        <InputGroupAddon addonType=\"prepend\" className=\"d-inline\">\n                                            <Button className=\"bg-default shadow\"><i className=\"ni ni-calendar-grid-58 text-white\" /></Button>\n                                        </InputGroupAddon>\n                                        <Input\n                                            type=\"date\"\n                                            autoComplete=\"new-sdate\"\n                                            id=\"createdDate\"\n                                            placeholder=\"Start Date\"\n                                            name=\"createdDate\"\n                                            value={filter.filterS.createdDate}\n                                            onChange={handleChange}\n                                            required\n                                        />\n                                    </InputGroup>\n                                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                                        <Input\n                                            type=\"select\"\n                                            autoComplete=\"new-name\"\n                                            value={filter.filterS.game_id}\n                                            onChange={handleChange}\n                                            id=\"game_id\"\n                                            placeholder=\"Select Game\"\n                                            name=\"game_id\"\n                                            required\n                                        >\n                                            <option key={\"select\"} value={\"\"}>Select Game</option>\n                                            {gamesList && gamesList.length ?\n                                                gamesList.map((list, index) => {\n                                                    return (\n                                                        <option key={index} value={list._id}>{list?.game_name}</option>\n                                                    )\n                                                }) : ''\n                                            }\n                                        </Input>\n                                    </InputGroup>\n                                    <InputGroup size=\"sm\" className=\"w-25 ml-2 auto-complete-search\">\n                                        <Autocomplete\n                                            filterOptions={filterOptions}\n                                            id=\"wallet_id\"\n                                            options={walletData}\n                                            value={filter.filterS.wallet_id}\n                                            onChange={(option, value) => {\n                                                setFilter((prevState) => ({\n                                                    ...prevState,\n                                                    filterS: {\n                                                        ...filter.filterS,\n                                                        wallet_id: value,\n                                                    },\n                                                }));\n                                            }}\n                                            renderOption={(option) => (\n                                                <React.Fragment>\n                                                    <Grid item xs>\n                                                        {option?.user_id?.first_name + option?.user_id?.last_name}\n                                                        <Typography variant=\"body2\" color=\"textSecondary\">\n                                                            {option?.phone_number}\n                                                        </Typography>\n                                                    </Grid>\n                                                </React.Fragment>\n                                            )}\n                                            // fullWidth={true}\n                                            getOptionLabel={(option) => option?.phone_number}\n                                            renderInput={(params) => <TextField style={{ color: \"white\", fontSize: '10px' }} {...params} label=\"Select Phone Number\" variant=\"outlined\" />}\n                                        />\n                                        {/* <Input\n                                            type=\"select\"\n                                            autoComplete=\"new-name\"\n                                            value={filter.filterS.user_id}\n                                            onChange={handleChange}\n                                            id=\"user_id\"\n                                            placeholder=\"Select Player\"\n                                            name=\"user_id\"\n                                            required>\n                                            <option key={\"select\"} value={\"\"}>Select User</option>\n                                            {userList && userList.length ?\n                                                userList.map((list, index) => {\n                                                    return (\n                                                        <option key={index} value={list._id}>{list?.first_name + list?.last_name}</option>\n                                                    )\n                                                }) : ''\n                                            }\n                                        </Input> */}\n                                    </InputGroup>\n                                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                                        <Input\n                                            type=\"number\"\n                                            onChange={handleChange}\n                                            id=\"amount\"\n                                            placeholder=\"Amount\"\n                                            name=\"amount\"\n                                            value={filter.filterS.amount}\n                                        />\n                                    </InputGroup>\n                                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                                        <Input\n                                            type=\"number\"\n                                            onChange={handleChange}\n                                            id=\"min\"\n                                            placeholder=\"Min\"\n                                            name=\"min\"\n                                            value={filter.filterS.min}\n                                        />\n                                    </InputGroup>\n                                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                                        <Input\n                                            type=\"number\"\n                                            onChange={handleChange}\n                                            id=\"max\"\n                                            placeholder=\"Max\"\n                                            name=\"max\"\n                                            value={filter.filterS.max}\n                                        />\n                                    </InputGroup>\n                                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                                        <Input\n                                            type=\"Button\"\n                                            onClick={() => getGameBetsData({ ...filter.filterS })}\n                                            className=\"bg-default text-white\"\n                                            value={\"Search\"}\n                                        ></Input>\n                                    </InputGroup>\n                                </div>\n                            </CardHeader>\n                            <div className=\"col games-table\">\n                                <div>\n                                    <div className=\"bet-table-container \">\n                                        <div className=\"l-sec\">\n                                            <div className=\"bet-rows\">\n                                                {\n                                                    hrows.map((item, index) => {\n                                                        return (\n                                                            <div key={item}>\n                                                                {\n                                                                    vrows.map((sItem, sIndex) => {\n                                                                        if (index === 0 || sIndex === 0) {\n                                                                            return (\n                                                                                <div key={`${item}_${sItem}`} className=\"l-item\">\n                                                                                    <label> {index === 0 ? sItem : item}</label>\n                                                                                    <input\n                                                                                        name={`${item}_${sItem}`}\n                                                                                        value={inputValues[`${item}_${sItem}`]}\n                                                                                        onChange={onRowValueChange}\n                                                                                        type=\"textfield\" />\n                                                                                </div>\n                                                                            )\n                                                                        } else {\n                                                                            return (\n                                                                                <div key={`${item}_${sItem}`}  >\n                                                                                    <input\n                                                                                        // key={`${item}_${sItem}`} \n                                                                                        name={`${item}_${sItem}`}\n                                                                                        value={inputValues[`${item}_${sItem}`]}\n                                                                                        onChange={onRowValueChange}\n                                                                                        type=\"textfield\" />\n                                                                                </div>\n                                                                            )\n                                                                        };\n                                                                    })\n                                                                }\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                            <div className=\"result-row\">\n                                                {\n                                                    vrows.map((item, index) => {\n                                                        return (\n                                                            <div key={`result_${item}`}>\n                                                                <input\n                                                                    name={`result_${item}`}\n                                                                    value={resultValues[`result_${item}`]}\n                                                                    // onChange={onResultValueChange}\n                                                                    type=\"textfield\" />\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"r-sec\">\n                                            <div className=\"total-bet\">\n                                                Total bet = Rs {totalbat}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"single-row-table\">\n                                        <div className=\"h-title\"><h3>ANDAR-HARUF</h3></div>\n                                        <div className=\"result-row single-row\">\n                                            {\n                                                singleRows.map((item, index) => {\n                                                    return (\n                                                        <div key={`andar_${item}`} className=\"l-item\">\n                                                            <label> {item}</label>\n                                                            <input\n                                                                name={`andar_${item}`}\n                                                                value={andarValues[`andar_${item}`]}\n                                                                onChange={onAndarValueChange}\n                                                                type=\"textfield\" />\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                            <div key={`andar_total`} className=\"l-item\">\n                                                <label>Total</label>\n                                                <input\n                                                    name={`andar_total`}\n                                                    value={totalandar}\n                                                    // onChange={onAndarValueChange}\n                                                    type=\"textfield\" />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"single-row-table\">\n                                        <div className=\"h-title\"><h3>BAHAR</h3></div>\n                                        <div className=\"result-row single-row\">\n                                            {\n                                                singleRows.map((item, index) => {\n                                                    return (\n                                                        <div key={`bahar_${item}`} className=\"l-item\">\n                                                            <label> {item}</label>\n                                                            <input\n                                                                name={`bahar_${item}`}\n                                                                value={baharValues[`bahar_${item}`]}\n                                                                onChange={onBaharValueChange}\n                                                                type=\"textfield\" />\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                            <div key={`bahar_total`} className=\"l-item\">\n                                                <label>Total</label>\n                                                <input\n                                                    name={`bahar_total`}\n                                                    value={totalbahar}\n                                                    // onChange={onBaharValueChange}\n                                                    type=\"textfield\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n};\nfunction mapStateToProps(state) {\n    return {\n        user: state.session.user,\n        games: state.games,\n        wallets: state.wallets,\n        userList: state.user.userList\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(GameBets));","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { login } from \"../../redux/actions\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst Login = () => {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    submitted: false,\n    emailError: false,\n  });\n  // const [isFocuse, setIsFocused] = useState(false);\n  const dispatch = useDispatch();\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n    if (id === 'email') {\n      if (reg.test(value) == false) {\n        setState(prevState => ({\n          ...prevState,\n          emailError: true,\n          [id]: value,\n        }));\n      } else {\n        setState(prevState => ({\n          ...prevState,\n          emailError: false,\n          [id]: value\n        }));\n      }\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        emailError: false,\n        [id]: value\n      }));\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setState(prevState => ({\n      ...prevState,\n      submitted: true\n    }));\n    const { email, password } = state;\n    if (email && password) {\n      dispatch(login(email, password, (res, errors) => {\n        \n      }));\n    }\n  };\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <Form role=\"form\">\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    type=\"email\"\n                    autoComplete=\"new-email\"\n                    value={state.email}\n                    onChange={handleChange}\n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter email\"\n                    name=\"email\"\n                    required\n                  />\n                </InputGroup>\n                {\n                  state.submitted && !state.email &&\n                  <div className=\"error\">Email is required</div>\n                }\n                {\n                  state.emailError &&\n                  <div className=\"error\">Please enter valid email.</div>\n                }\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter password\"\n                    name=\"password\"\n                    value={state.password}\n                    onChange={handleChange}\n                    required\n                  />\n                </InputGroup>\n                {\n                  state.submitted && !state.password &&\n                  <div className=\"error\">Password is required</div>\n                }\n              </FormGroup>\n\n              <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                <input\n                  className=\"custom-control-input\"\n                  id=\" customCheckLogin\"\n                  type=\"checkbox\"\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor=\" customCheckLogin\"\n                >\n                  <span className=\"text-muted\">Remember me</span>\n                </label>\n              </div>\n              <div className=\"text-center\">\n                <Button disabled={!(state.password && state.email)} onClick={handleSubmit} className=\"my-4\" color=\"primary\" type=\"button\">\n                  Sign in\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          <Col xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"#pablo\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <small>Forgot password?</small>\n            </a>\n          </Col>\n          <Col className=\"text-right\" xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"#pablo\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <small>Create new account</small>\n            </a>\n          </Col>\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect } from \"react\";\nimport moment from 'moment';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport { getWallets, getUserRequest, updateUserRequest, addMoneyToWallet } from \"../../redux/actions\";\nimport { toastr } from 'react-redux-toastr'\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { getTransactionHistory } from \"../../redux/actions\";\nimport { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, TableFooter, TablePagination } from \"@material-ui/core\";\n\nconst PaymentRequest = (props) => {\n  // console.log(props, \"props\");\n  const { walletsList } = props.wallets;\n  let walletData = walletsList.filter((wallet) => {\n    return wallet?.phone_number\n  })\n  const filterOptions = createFilterOptions({\n    ignoreCase: false,\n    ignoreAccents: false,\n  });\n  const { transactionHistory, userRequests } = props.transactionHistory;\n  // console.log(userRequests, \"transactionHistory\");\n  const dispatch = useDispatch();\n  const [userData, setUserData] = useState(userRequests);\n  const [state, setState] = useState({\n    wallet_id: \"\",\n    transaction_mode: \"card\",\n    transaction_type: \"none\",\n    amount: null,\n    submitted: false,\n  });\n  const [filter, setFilter] = useState({\n    filterS: {\n      transaction_type: \"\",\n      transaction_mode: \"\",\n      phone_number: \"\",\n      amount: \"\",\n      createdAt: \"\",\n    },\n  });\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    getUserData({ transaction_type: \"credit\" });\n    dispatch(getWallets({}, (errors, res) => {\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }, []);\n  const handleChange = (e) => {\n    const { id, value, name } = e.target;\n    if (name) {\n      setState(prevState => ({\n        ...prevState,\n        [name]: value,\n      }));\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        [id]: value,\n      }));\n    }\n\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setState(prevState => ({\n      ...prevState,\n      submitted: true\n    }));\n    let reqData = {\n      \"wallet_id\": state.wallet_id,\n      \"amount\": state.amount,\n      \"transaction_type\": state.transaction_type,\n      \"transaction_mode\": state.transaction_mode,\n    }\n    dispatch(addMoneyToWallet(reqData, (res, errors) => {\n      toastr.success('Success', \"Money Requested Successfully Please check and approve\");\n      dispatch(getUserRequest({}, (errors, res) => {\n        dispatch({ type: 'LOADING_SUCCESS' });\n      }));\n    }));\n  };\n  // const handleFilterChange = (e) => {\n  //   e.preventDefault();\n  //   var filterS = {\n  //     status: e.currentTarget.getAttribute(\"dropdownvalue\")\n  //   }\n  //   setFilter(prevState => ({\n  //     ...prevState,\n  //     filterS: { ...filterS }\n  //   }));\n  //   getUserData({\n  //     transaction_type: e.currentTarget.getAttribute(\"dropdownvalue\")\n  //   })\n  // };\n  const onUpdate = (transaction, status) => {\n    let updatData = {\n      \"transaction_id\": transaction._id,\n      \"transaction_status\": status,\n      \"role\": \"admin\"\n    }\n    dispatch(updateUserRequest(updatData, (err, res) => {\n      if (res.data.message) {\n        toastr.success('error', res.data.message)\n      } else {\n        toastr.success('Success', 'Request Updated Successfully')\n      }\n      getUserData({ transaction_type: \"credit\" });\n    }));\n  }\n  const getUserData = (query = {}) => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getUserRequest(query, (errors, res) => {\n      setUserData(res.data);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }\n  const status = {\n    debit: \"Debit\",\n    credit: \"Credit\"\n\n  }\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    const { id, value } = e.target;\n    setFilter((prevState) => ({\n      ...prevState,\n      filterS: {\n        ...filter.filterS,\n        [id]: value,\n      },\n    }));\n  };\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userData.length) : 0;\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Dark table */}\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-secondary shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"mb-0 text-center\">Add Money To User Account</h3>\n              </CardHeader>\n              <CardBody>\n                <Form role=\"form\">\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <Autocomplete\n                        filterOptions={filterOptions}\n                        id=\"wallet_id\"\n                        options={walletData}\n                        value={state.wallet_id}\n                        onChange={(option, value) => {\n                          setState(prevState => ({\n                            ...prevState,\n                            wallet_id: value,\n                          }));\n                        }}\n                        renderOption={(option) => (\n                          <React.Fragment>\n                            <Grid item xs>\n                              {option?.user_id?.first_name + option?.user_id?.last_name}\n                              <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option?.phone_number}\n                              </Typography>\n                            </Grid>\n                          </React.Fragment>\n                        )}\n                        fullWidth={true}\n                        getOptionLabel={(option) => option?.phone_number}\n                        renderInput={(params) => <TextField style={{ color: \"white\" }} {...params} label=\"Select Phone Number\" variant=\"outlined\" fullWidth />}\n                      />\n                    </InputGroup>\n                    {\n                      state.submitted && !state.wallet_id &&\n                      <div className=\"error\">Wallet name is required</div>\n                    }\n                  </FormGroup>\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative\">\n                      <TextField\n                        fullWidth\n                        type=\"number\"\n                        variant=\"outlined\"\n                        id=\"amount\"\n                        placeholder=\"Enter amount\"\n                        name=\"amount\"\n                        value={state.amount}\n                        onChange={handleChange}\n                        required\n                      />\n                    </InputGroup>\n                    {\n                      state.submitted && !state.amount &&\n                      <div className=\"error\">Amount is required</div>\n                    }\n                  </FormGroup>\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <Select\n                        fullWidth\n                        type=\"select\"\n                        value={state.transaction_type}\n                        onChange={handleChange}\n                        inputProps={{\n                          id: 'transaction_type',\n                          'aria-label': 'Without label'\n                        }}\n                        variant=\"outlined\"\n                        id=\"transaction_type\"\n                        name=\"transaction_type\"\n                      >\n                        <option value=\"none\" disabled>Select Transaction Type</option>\n                        <option value=\"credit\">Credit</option>\n                        <option value=\"debit\" > Debit</option>\n                      </Select>\n                    </InputGroup>\n                    {\n                      state.submitted && !state.transaction_type !== 'none' &&\n                      <div className=\"error\">Transaction Type is required</div>\n                    }\n                  </FormGroup>\n                  {/* <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-ui-04\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"select\"\n                        autoComplete=\"new-name\"\n                        value={state.transaction_mode}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        id=\"transaction_mode\"\n                        placeholder=\"Select Payment Mode\"\n                        name=\"transaction_mode\"\n                        required>\n                        <option value={\"\"}>Select Payment Mode</option>\n                        <option value={\"gpay\"}>Gpay</option>\n                        <option value={\"paytm\"}>Paytm</option>\n                        <option value={\"card\"}>Card</option>\n                        <option value={\"bets\"}>Bets</option>\n                        <option value={\"refer\"}>Referral</option>\n                      </Input>\n                    </InputGroup>\n                    {\n                      state.submitted && !state.transaction_mode &&\n                      <div className=\"error\">Transaction Mode is required</div>\n                    }\n                  </FormGroup> */}\n                  <div className=\"text-center\">\n                    <Button disabled={!(state.transaction_type !== 'none' && state.amount && state.wallet_id)} onClick={handleSubmit} className=\"my-4\" color=\"primary\" type=\"button\">\n                      Add Money\n                    </Button>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">Payments</h3>\n                <div className=\"d-flex mt-2\">\n                  <InputGroup size=\"sm\" className=\"w-25\">\n                    <Input\n                      id=\"phone_number\"\n                      type=\"text\"\n                      name=\"phone_number\"\n                      value={filter.filterS.phone_number || \"\"}\n                      onChange={handleFilterChange}\n                      placeholder=\"Search Phone Number\"\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                      <Button className=\"bg-default shadow\">\n                        <i className=\"fas fa-search text-white\" />\n                      </Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      id=\"amount\"\n                      type=\"number\"\n                      name=\"amount\"\n                      value={filter.filterS.amount || \"\"}\n                      onChange={handleFilterChange}\n                      placeholder=\"Search Amount\"\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                      <Button className=\"bg-default shadow\">\n                        <i className=\"fas fa-search text-white\" />\n                      </Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      id=\"createdAt\"\n                      type=\"date\"\n                      name=\"createdAt\"\n                      value={filter.filterS.createdAt || \"\"}\n                      onChange={handleFilterChange}\n                      placeholder=\"Search for Date\"\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                      <Button className=\"bg-default shadow\">\n                        <i className=\"fas fa-search text-white\" />\n                      </Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      type=\"select\"\n                      value={filter.filterS.transaction_type}\n                      onChange={handleFilterChange}\n                      className=\"form-control\"\n                      id=\"transaction_type\"\n                      name=\"transaction_type\"\n                      required\n                    >\n                      <option key=\"select\" value=\"\">\n                        Select Transaction Type\n                      </option>\n                      <option key=\"gpay\" value=\"debit\">\n                        Debit\n                      </option>\n                      <option key=\"paytm\" value=\"credit\">\n                        Credit\n                      </option>\n                    </Input>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      type=\"select\"\n                      autoComplete=\"new-name\"\n                      value={filter.filterS.transaction_mode}\n                      onChange={handleFilterChange}\n                      className=\"form-control\"\n                      id=\"transaction_mode\"\n                      placeholder=\"Select Payment Method\"\n                      name=\"transaction_mode\"\n                      required\n                    >\n                      <option key=\"select\" value=\"\">\n                        Select Payment Method\n                      </option>\n                      <option key=\"gpay\" value=\"gpay\">\n                        Gpay\n                      </option>\n                      <option key=\"paytm\" value=\"paytm\">\n                        Paytm\n                      </option>\n                      <option key=\"card\" value=\"card\">\n                        Card\n                      </option>\n                      <option key=\"bets\" value=\"bets\">\n                        Bets\n                      </option>\n                      <option key=\"refer\" value=\"refer\">\n                        Referral\n                      </option>\n                      <option key=\"win\" value=\"win\">\n                        Win\n                      </option>\n                    </Input>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      type=\"Button\"\n                      onClick={() => getUserData({ ...filter.filterS })}\n                      className=\"bg-default text-white\"\n                      value={\"Search\"}\n                    ></Input>\n                  </InputGroup>\n                </div>\n              </CardHeader>\n              <TableContainer>\n                <Table className=\"align-items-center table-dark table-flush\"\n                  responsive>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"text-white\">Name</TableCell>\n                      <TableCell className=\"text-white\" align=\"cenetr\">Payment Method</TableCell>\n                      <TableCell  className=\"text-white\" align=\"cenetr\">Amount</TableCell>\n                      <TableCell className=\"text-white\" align=\"cenetr\">Payment Type</TableCell>\n                      <TableCell className=\"text-white\" align=\"cenetr\">Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                  {userData && userData.length ?\n                    userData\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((list, index) => {\n                      return (\n                        <TableRow key={index}>\n                          <TableHead scope=\"row\">\n                            <span className=\"mb-0 text-sm\">{list?.wallet_id?.phone_number}</span>\n                          </TableHead>\n                          <TableCell  className=\"text-white\" align=\"cenetr\">{list?.transaction_mode}</TableCell>\n                          <TableCell className=\"text-white\" align=\"cenetr\">{list?.amount}</TableCell>\n                          <TableCell className=\"text-white\" align=\"cenetr\">{list?.transaction_type}</TableCell>\n                          <TableCell className=\"text-white\" align=\"cenetr\">{moment(list?.createdAt).format('MM-DD-YYYY, h:mm a')}</TableCell>\n                          <TableCell>\n                            <React.Fragment>\n                              <button\n                                className={\"btn-success\"}\n                                onClick={() => onUpdate(list, 'approved')}\n                              >\n                                Approve\n                              </button>\n\n                              <button\n                                className={\"btn-secondary\"}\n                                style={{ marginLeft: 8 }}\n                                onClick={() => onUpdate(list, 'rejected')}\n                              >\n                                Reject\n                              </button>\n                            </React.Fragment>\n                          </TableCell>\n                        </TableRow>\n                        )\n                      }) : ''\n                    }\n                    {emptyRows > 0 && (\n                        <TableRow\n                          style={{\n                            height: (53) * emptyRows,\n                          }}\n                        >\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                  </TableBody>\n                  <TableFooter>\n                    <TableRow>\n                      <TablePagination \n                      className=\"text-white\"\n                          rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                          colSpan={5}\n                          count={userData.length}\n                          rowsPerPage={rowsPerPage}\n                          page={page}\n                          onPageChange={handleChangePage}\n                          onRowsPerPageChange={handleChangeRowsPerPage} />\n                    </TableRow>\n                  </TableFooter>\n                </Table>\n              </TableContainer>\n              {/* <Table\n                className=\"align-items-center table-dark table-flush\"\n                responsive\n              >\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Payment Method</th>\n                    <th scope=\"col\">Amount</th>\n                    <th scope=\"col\">Payment Type</th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  {userData && userData.length ?\n                    userData.map((list, index) => {\n                      return (\n                        <tr key={index}>\n                          <th scope=\"row\">\n                            <span className=\"mb-0 text-sm\">{list?.wallet_id?.phone_number}</span>\n                          </th>\n                          <td>{list?.transaction_mode}</td>\n                          <td>{list?.amount}</td>\n                          <td>{list?.transaction_type}</td>\n                          <td>{moment(list?.createdAt).format('MM-DD-YYYY, h:mm a')}</td>\n                          <td>\n                            <React.Fragment>\n                              <button\n                                className={\"btn-success\"}\n                                onClick={() => onUpdate(list, 'approved')}\n                              >\n                                Approve\n                              </button>\n\n                              <button\n                                className={\"btn-secondary\"}\n                                style={{ marginLeft: 8 }}\n                                onClick={() => onUpdate(list, 'rejected')}\n                              >\n                                Reject\n                              </button>\n                            </React.Fragment>\n                          </td>\n                        </tr>\n                      )\n                    }) : ''\n                  }\n                </tbody>\n              </Table> */}\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.session.user,\n    wallets: state.wallets,\n    transactionHistory: state.transactionHistory\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(PaymentRequest));\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  UncontrolledDropdown,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { getTransactionHistory } from \"../../redux/actions\";\nimport { TableBody, TableCell, TableRow, TableContainer, TablePagination, Table, TableHead, TableFooter } from \"@material-ui/core\";\n\nconst TransactionsHistory = (props) => {\n  const { transactionHistory } = props.transactionHistory;\n  const dispatch = useDispatch();\n  const [transactionHistorySet, setTransactionHistory] = useState([]);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const [filter, setFilter] = useState({\n    filterS: {\n      transaction_type: \"\",\n      transaction_mode: \"\",\n      phone_number: \"\",\n      amount: \"\",\n      createdAt: \"\",\n    },\n  });\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    const { id, value } = e.target;\n    setFilter((prevState) => ({\n      ...prevState,\n      filterS: {\n        ...filter.filterS,\n        [id]: value,\n      },\n    }));\n  };\n  const getUserData = (query = {}) => {\n    dispatch({ type: \"LOADING_START\" });\n    dispatch(\n      getTransactionHistory(query, (errors, res) => {\n        setTransactionHistory(res.response);\n        dispatch({ type: \"LOADING_SUCCESS\" });\n      })\n    );\n  };\n  const status = {\n    debit: \"Debit\",\n    credit: \"Credit\",\n  };\n  const transaction_mode = {\n    gpay: \"Gpay\",\n    paytm: \"Paytm\",\n    card: \"Card\",\n    bets: \"Bets\",\n  };\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - transactionHistory.length) : 0;\n  return (\n    console.log(filter.filterS, \"FILTERS\"),\n    (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">Transaction History</h3>\n                  <div className=\"d-flex mt-2\">\n                    <InputGroup size=\"sm\" className=\"w-25\">\n                      <Input\n                        id=\"phone_number\"\n                        type=\"text\"\n                        name=\"phone_number\"\n                        value={filter.filterS.phone_number || \"\"}\n                        onChange={handleFilterChange}\n                        placeholder=\"Search Phone Number\"\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <Button className=\"bg-default shadow\">\n                          <i className=\"fas fa-search text-white\" />\n                        </Button>\n                      </InputGroupAddon>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                      <Input\n                        id=\"amount\"\n                        type=\"number\"\n                        name=\"amount\"\n                        value={filter.filterS.amount || \"\"}\n                        onChange={handleFilterChange}\n                        placeholder=\"Search Amount\"\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <Button className=\"bg-default shadow\">\n                          <i className=\"fas fa-search text-white\" />\n                        </Button>\n                      </InputGroupAddon>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                      <Input\n                        id=\"createdAt\"\n                        type=\"date\"\n                        name=\"createdAt\"\n                        value={filter.filterS.createdAt || \"\"}\n                        onChange={handleFilterChange}\n                        placeholder=\"Search for Date\"\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <Button className=\"bg-default shadow\">\n                          <i className=\"fas fa-search text-white\" />\n                        </Button>\n                      </InputGroupAddon>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                      <Input\n                        type=\"select\"\n                        value={filter.filterS.transaction_type}\n                        onChange={handleFilterChange}\n                        className=\"form-control\"\n                        id=\"transaction_type\"\n                        name=\"transaction_type\"\n                        required\n                      >\n                        <option key=\"select\" value=\"\">\n                          Select Transaction Type\n                        </option>\n                        <option key=\"gpay\" value=\"debit\">\n                          Debit\n                        </option>\n                        <option key=\"paytm\" value=\"credit\">\n                          Credit\n                        </option>\n                      </Input>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                      <Input\n                        type=\"select\"\n                        autoComplete=\"new-name\"\n                        value={filter.filterS.transaction_mode}\n                        onChange={handleFilterChange}\n                        className=\"form-control\"\n                        id=\"transaction_mode\"\n                        placeholder=\"Select Payment Mothod\"\n                        name=\"transaction_mode\"\n                        required\n                      >\n                        <option key=\"select\" value=\"\">\n                          Select Payment Mothod\n                        </option>\n                        <option key=\"gpay\" value=\"gpay\">\n                          Gpay\n                        </option>\n                        <option key=\"paytm\" value=\"paytm\">\n                          Paytm\n                        </option>\n                        <option key=\"card\" value=\"card\">\n                          Card\n                        </option>\n                        <option key=\"bets\" value=\"bets\">\n                          Bets\n                        </option>\n                        <option key=\"win\" value=\"win\">\n                          Win\n                        </option>\n                      </Input>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                      <Input\n                        type=\"Button\"\n                        onClick={() => getUserData({ ...filter.filterS })}\n                        className=\"bg-default text-white\"\n                        value={\"Search\"}\n                      ></Input>\n                    </InputGroup>\n                  </div>\n                </CardHeader>\n                <TableContainer>\n                  <Table className=\"align-items-center \"\n                    responsive>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className=\"text-white\" className=\"text-white\">Phone Number</TableCell>\n                        <TableCell className=\"text-white\" align=\"center\">Payment Method</TableCell>\n                        <TableCell className=\"text-white\" align=\"center\">Amount</TableCell>\n                        <TableCell className=\"text-white\" align=\"center\">Payment Type</TableCell>\n                        <TableCell className=\"text-white\" align=\"center\">Date</TableCell>\n                        <TableCell className=\"text-white\"></TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {transactionHistory && transactionHistory.length\n                        ? transactionHistory\n                          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                          .map((list, index) => {\n                            return (\n                              <TableRow key={index}>\n                                <TableCell className=\"text-white\">{list?.wallet_id?.phone_number}</TableCell>\n                                <TableCell className=\"text-white\" align=\"center\">{list?.transaction_mode}</TableCell>\n                                <TableCell className=\"text-white\" align=\"center\">{list?.amount}</TableCell>\n                                <TableCell className=\"text-white\" align=\"center\">{list?.transaction_type}</TableCell>\n                                <TableCell className=\"text-white\" align=\"center\">\n                                  {moment(list.updatedAt).format(\n                                    \"MM-DD-YYYY, h:mm a\"\n                                  )}\n                                </TableCell>\n                              </TableRow>\n                            )\n                          }) : ''\n                      }\n                      {emptyRows > 0 && (\n                        <TableRow\n                          style={{\n                            height: (53) * emptyRows,\n                          }}\n                        >\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                    <TableFooter>\n                      <TableRow>\n                        <TablePagination\n                          className=\"text-white\"\n                          rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                          colSpan={5}\n                          count={transactionHistory.length}\n                          rowsPerPage={rowsPerPage}\n                          page={page}\n                          onPageChange={handleChangePage}\n                          onRowsPerPageChange={handleChangeRowsPerPage} />\n                      </TableRow>\n                    </TableFooter>\n                  </Table>\n                </TableContainer>\n                {/* <Table\n                  className=\"align-items-center table-dark table-flush\"\n                  responsive\n                >\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Phone Number</th>\n                      <th scope=\"col\">Payment Method</th>\n                      <th scope=\"col\">Amount</th>\n                      <th scope=\"col\">Payment Type</th>\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {transactionHistory && transactionHistory.length\n                      ? transactionHistory.map((list, index) => {\n                        return (\n                          <tr key={index}>\n                            <td>{list?.wallet_id?.phone_number}</td>\n                            <td>{list?.transaction_mode}</td>\n                            <td>{list?.amount}</td>\n                            <td>{list?.transaction_type}</td>\n                            <td>\n                              {moment(list.updatedAt).format(\n                                \"MM-DD-YYYY, h:mm a\"\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      })\n                      : \"\"}\n                  </tbody>\n                </Table> */}\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    )\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.session.user,\n    transactionHistory: state.transactionHistory,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(TransactionsHistory));\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport { toastr } from 'react-redux-toastr'\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { getWallets, addMoneyToWallet } from \"../../redux/actions\";\nimport { TableBody, TableCell, TableRow , TableHead, Table , TableFooter, TableContainer, TablePagination} from \"@material-ui/core\";\n\nconst Wallet = (props) => {\n  const { walletsList } = props.wallets;\n  const dispatch = useDispatch();\n  const [walletSet, setWallets] = useState([]);\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null\n  });\n  const [state, setState] = useState({\n    wallet_id: \"\",\n    transaction_mode: \"\",\n    transaction_type: \"\",\n    amount: 0,\n    submitted: false,\n  });\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [filter, setFilter] = useState({\n    filterS: {\n      status: '',\n      phone_number: \"\",\n      total_amount: \"\"\n    }\n  });\n\n  const [totalAmount, setTotalAmount] = useState(null);\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setState(prevState => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n  useEffect(() => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getWallets({}, (errors, res) => {\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }, []);\n\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    const { id, value } = e.target;\n    setFilter(prevState => ({\n      ...prevState,\n      filterS: {\n        ...filter.filterS,\n        [id]: value,\n      }\n    }));\n    console.log(filter.filterS, \"STATUSSS\");\n  };\n\n  const getWalletData = (query = {}) => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getWallets(query, (errors, res) => {\n      setWallets(res.response);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }\n\n  /**\n   *\n   * @param id - The id of the wallet\n   * @param currentTotalAmount - The current total amount of the wallet\n   */\n  const onEdit = ({ id, currentTotalAmount }) => {\n    setInEditMode({\n      status: true,\n      rowKey: id\n    })\n    setTotalAmount(currentTotalAmount);\n  }\n\n  const onCancel = () => {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null\n    })\n    // reset the total amount value\n    setTotalAmount(null);\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setState(prevState => ({\n      ...prevState,\n      submitted: true\n    }));\n    let reqData = {\n      \"wallet_id\": state.wallet_id,\n      \"amount\": state.amount,\n      \"transaction_type\": state.transaction_type,\n      \"transaction_mode\": state.transaction_mode,\n    }\n    dispatch(addMoneyToWallet(reqData, (res, errors) => {\n      toastr.success('Success', \"Money Requested Successfully Please check and approve\");\n      dispatch(getWallets({}, (errors, res) => {\n        dispatch({ type: 'LOADING_SUCCESS' });\n      }));\n    }));\n  };\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - walletsList.length) : 0;\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Dark table */}\n        {/* <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0 text-center\">Add Money To User Account</h3>\n              </CardHeader>\n              <CardBody>\n                <Form role=\"form\">\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-ui-04\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"select\"\n                        autoComplete=\"new-name\"\n                        value={state.wallet_id}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        id=\"wallet_id\"\n                        placeholder=\"Select Game\"\n                        name=\"wallet_id\"\n                        required>\n                        {walletsList && walletsList.length ?\n                          walletsList.map((list, index) => {\n                            return (\n                              <option key={index} value={list._id}>{list?.user_id?.first_name + list?.user_id?.last_name}</option>\n                            )\n                          }) : ''\n                        }\n                      </Input>\n                    </InputGroup>\n                    {\n                      state.submitted && !state.wallet_id &&\n                      <div className=\"error\">Wallet name is required</div>\n                    }\n                  </FormGroup>\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-money-coins\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"number\"\n                        autoComplete=\"new-wbetno\"\n                        className=\"form-control\"\n                        id=\"amount\"\n                        placeholder=\"Enter amount\"\n                        name=\"password\"\n                        value={state.amount}\n                        onChange={handleChange}\n                        required\n                      />\n                    </InputGroup>\n                    {\n                      state.submitted && !state.amount &&\n                      <div className=\"error\">Amount is required</div>\n                    }\n                  </FormGroup>\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-ui-04\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"select\"\n                        autoComplete=\"new-name\"\n                        value={state.transaction_type}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        id=\"transaction_type\"\n                        placeholder=\"Select Transaction Type\"\n                        name=\"transaction_type\"\n                        required>\n                        <option value={\"credit\"}>Credit</option>\n                        <option value={\"debit\"}>Debit</option>\n                      </Input>\n                    </InputGroup>\n                    {\n                      state.submitted && !state.transaction_type &&\n                      <div className=\"error\">Transaction Type is required</div>\n                    }\n                  </FormGroup>\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-ui-04\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"select\"\n                        autoComplete=\"new-name\"\n                        value={state.transaction_mode}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        id=\"transaction_mode\"\n                        placeholder=\"Select Payment Mode\"\n                        name=\"transaction_mode\"\n                        required>\n                        <option value={\"gpay\"}>Gpay</option>\n                        <option value={\"paytm\"}>Paytm</option>\n                        <option value={\"card\"}>Card</option>\n                        <option value={\"bets\"}>Bets</option>\n                      </Input>\n                    </InputGroup>\n                    {\n                      state.submitted && !state.transaction_mode &&\n                      <div className=\"error\">Transaction Mode is required</div>\n                    }\n                  </FormGroup>\n                  <div className=\"text-center\">\n                    <Button disabled={!(state.transaction_mode && state.transaction_type && state.amount && state.wallet_id)} onClick={handleSubmit} className=\"my-4\" color=\"primary\" type=\"button\">\n                      Add Result\n                    </Button>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </div>\n        </Row> */}\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">Wallet Details</h3>\n                <div className=\"d-flex mt-2\">\n                  <InputGroup size=\"sm\" className=\"w-25\">\n                    <Input\n                      id=\"phone_number\"\n                      type=\"text\"\n                      name=\"phone_number\"\n                      value={filter.filterS.phone_number}\n                      onChange={handleFilterChange}\n                      placeholder=\"Search Phone Number\"\n                    />\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      id=\"total_amount\"\n                      step=\"1\"\n                      type=\"number\"\n                      name=\"total_amount\"\n                      value={filter.filterS.total_amount}\n                      onChange={handleFilterChange}\n                      placeholder=\"Search Total Amount\"\n                    />\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      type=\"select\"\n                      value={filter.filterS.status}\n                      onChange={handleFilterChange}\n                      id=\"status\"\n                      name=\"status\"\n                      required>\n                      <option key=\"select\" value=\"\">Select Status</option>\n                      <option key=\"active\" value=\"active\">Active</option>\n                      <option key=\"inactive\" value=\"inactive\">Inactive</option>\n                    </Input>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input type=\"Button\" onClick={() => getWalletData({ ...filter.filterS })} className=\"bg-default text-white\" value={\"Search\"}></Input>\n                  </InputGroup>\n                </div>\n              </CardHeader>\n              <TableContainer>\n                <Table className=\"align-items-center table-dark table-flush\"\n                  responsive>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"text-white\">User Name</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Phone Number</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Total Amount</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\"> status</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                  {walletsList && walletsList.length ?\n                    walletsList\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((list, index) => {\n                      return (\n                        <TableRow key={index}>\n                          <TableCell className=\"text-white\">{list?.user_id?.first_name + list?.user_id?.last_name}</TableCell>\n                          <TableCell className=\"text-white\" align=\"center\">{list?.phone_number}</TableCell>\n                          <TableCell className=\"text-white\" align=\"center\">{list?.total_amount}</TableCell>\n                          <TableCell className=\"text-white\" align=\"center\">{list?.status}</TableCell>\n                        </TableRow>\n                        )\n                      }) : ''\n                    }\n                    {emptyRows > 0 && (\n                        <TableRow\n                          style={{\n                            height: (53) * emptyRows,\n                          }}\n                        >\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                  </TableBody>\n                  <TableFooter>\n                    <TableRow>\n                      <TablePagination \n                      className=\"text-white\"\n                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                      colSpan={5}\n                      count={walletsList.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}/>\n                    </TableRow>\n                  </TableFooter>\n                </Table>\n              </TableContainer>\n              {/* <Table\n                className=\"align-items-center table-dark table-flush\"\n                responsive\n              >\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">User Name</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Total Amount</th>\n                    <th scope=\"col\">Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {walletsList && walletsList.length ?\n                    walletsList.map((list, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{list?.user_id?.first_name + list?.user_id?.last_name}</td>\n                          <td>{list?.phone_number}</td>\n                          <td>{list?.total_amount}</td>\n                          <td>{list?.status}</td>\n                        </tr>\n                      )\n                    }) : ''\n                  }\n                </tbody>\n              </Table> */}\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.session.user,\n    wallets: state.wallets\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(Wallet));\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  Button,\n  Input,\n  Container,\n  Row,\n  UncontrolledDropdown,\n  InputGroup,\n  InputGroupAddon,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { getUserList } from \"../../redux/actions\";\nimport { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, TableFooter, TablePagination } from \"@material-ui/core\";\n\nconst Users = (props) => {\n  console.log(props, \"PROPSSS\");\n  const { userList } = props;\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState({\n    filterS: {\n      status: '',\n      phone_number: \"\",\n      searchText: \"\"\n    }\n  });\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    const { id, value } = e.target;\n    setFilter(prevState => ({\n      ...prevState,\n      filterS: {\n        ...filter.filterS,\n        [id]: value,\n      }\n    }));\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  const getUserData = (query = {}) => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getUserList(query, (errors, res) => {\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }\n\n  const getSearchUser = (e) => {\n    e.preventDefault();\n    setSearchText(e.target.value);\n    // let user = shortListedUser.filter(user => {\n    //     let userName = user.shortlistedUser.first_name + user.shortlistedUser.last_name;\n    //     return userName.indexOf(e.target.value) > 0;\n    // });\n    // setSearchedShortListedUser(user);\n  };\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Dark table */}\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">Users Details</h3>\n                <div className=\"d-flex mt-2\">\n                  <InputGroup size=\"sm\" className=\"w-25\">\n                    <Input\n                      id=\"searchText\"\n                      type=\"text\"\n                      name=\"searchText\"\n                      value={filter.filterS.searchText}\n                      onChange={handleFilterChange}\n                      placeholder=\"Search Name\"\n                    />\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      id=\"phone_number\"\n                      step=\"1\"\n                      type=\"number\"\n                      name=\"phone_number\"\n                      value={filter.filterS.phone_number}\n                      onChange={handleFilterChange}\n                      placeholder=\"Search Phone Number\"\n                    />\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input type=\"Button\" onClick={() => getUserData({ ...filter.filterS })} className=\"bg-default text-white\" value={\"Search\"}></Input>\n                  </InputGroup>\n                </div>\n              </CardHeader>\n              <TableContainer>\n                <Table className=\"align-items-center table-dark table-flush\"\n                  responsive>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"text-white\">First name</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Last Name</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Phone NUmber</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\"> Status</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {userList && userList.length ?\n                      userList\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((list, index) => {\n                          return (\n                            <TableRow key={index}>\n                              <TableCell className=\"text-white\">{list?.first_name}</TableCell >\n                              <TableCell className=\"text-white\" align=\"center\">{list?.last_name}</TableCell >\n                              <TableCell className=\"text-white\" align=\"center\">{list?.phone_number}</TableCell >\n                              <TableCell className=\"text-white\" align=\"center\">{list?.status}</TableCell >\n                            </TableRow>\n                          )\n                        }) : ''\n                    }\n                    {emptyRows > 0 && (\n                      <TableRow\n                        style={{\n                          height: (53) * emptyRows,\n                        }}\n                      >\n                        <TableCell colSpan={6} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                  <TableFooter>\n                    <TableRow>\n                      <TablePagination\n                        className=\"text-white\"\n                        rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                        colSpan={5}\n                        count={userList.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage} />\n                    </TableRow>\n                  </TableFooter>\n                </Table>\n              </TableContainer>\n              {/* <Table\n                className=\"align-items-center table-dark table-flush\"\n                responsive\n              >\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">First Name</th>\n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  {userList && userList.length ?\n                    userList.map((list, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{list?.first_name}</td>\n                          <td>{list?.last_name}</td>\n                          <td>{list?.phone_number}</td>\n                          <td>{list?.status}</td>\n                        </tr>\n                      )\n                    }) : ''\n                  }\n                </tbody>\n              </Table> */}\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.session.user,\n    userList: state.user.userList\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(Users));\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport { toastr } from 'react-redux-toastr'\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Label\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { getGameResults, updateGameResults, getGames } from \"../../redux/actions\";\nimport { TableBody, TableCell, Table, TablePagination, TableRow, TableContainer, TableHead, TableFooter } from \"@material-ui/core\";\n\nconst GameResults = (props) => {\n  console.log(props, \"PROPSSSSSS\");\n  const { gameResults, gamesList } = props.games;\n  const dispatch = useDispatch();\n  const [gamesSet, setGames] = useState([]);\n  const [state, setState] = useState({\n    game_name: \"\",\n    winning_bet_number: \"\",\n    winning_amount: \"\",\n    submitted: false,\n  });\n  const [filter, setFilter] = useState({\n    filterS: {\n      game_id: \"\",\n      winning_bet_number: \"\",\n      winning_amount: \"\"\n    }\n  });\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getGames((errors, res) => {\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n    dispatch(getGameResults({}, (errors, res) => {\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }, []);\n\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    const { id, value } = e.target;\n    setFilter(prevState => ({\n      ...prevState,\n      filterS: {\n        ...filter.filterS,\n        [id]: value,\n      }\n    }));\n  };\n\n  const getGameResultData = (query = {}) => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getGameResults(query, (errors, res) => {\n      setGames(res.response);\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setState(prevState => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setState(prevState => ({\n      ...prevState,\n      submitted: true\n    }));\n    let reqData = {\n      \"_id\": state.game_name,\n      \"role\": \"admin\",\n      \"today_game_result\": {\n        \"game_bet_id\": state.game_name,\n        \"winning_bet_number\": state.winning_bet_number,\n        \"winning_amount\": state.winning_amount,\n      }\n    }\n    if (reqData) {\n      dispatch({ type: 'LOADING_START' });\n      dispatch(updateGameResults(reqData, (res, errors) => {\n        toastr.success('Success', \"Game Result Added\")\n        setState({\n          game_name: \"\",\n          winning_bet_number: \"\",\n          winning_amount: \"\",\n          submitted: true,\n        });\n        dispatch({ type: 'LOADING_SUCCESS' });\n      }));\n    }\n  };\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - gameResults.length) : 0;\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0 text-center\">Add Game Result</h3>\n              </CardHeader>\n              <CardBody>\n                <Form role=\"form\">\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-ui-04\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"select\"\n                        autoComplete=\"new-name\"\n                        value={state.game_name}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        id=\"game_name\"\n                        placeholder=\"Select Game\"\n                        name=\"game_name\"\n                        required>\n                        <option key={'no'} value=\"\">Select Game</option>\n                        {gamesList && gamesList.length ?\n                          gamesList.map((list, index) => {\n                            return (\n                              <option key={index} value={list._id}>{list?.game_name}</option>\n                            )\n                          }) : ''\n                        }\n                      </Input>\n                    </InputGroup>\n                    {\n                      state.submitted && !state.game_name &&\n                      <div className=\"error\">Game name is required</div>\n                    }\n                  </FormGroup>\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-money-coins\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"number\"\n                        autoComplete=\"new-wbetno\"\n                        className=\"form-control\"\n                        id=\"winning_bet_number\"\n                        placeholder=\"Enter winning bet number\"\n                        name=\"password\"\n                        value={state.winning_bet_number}\n                        onChange={handleChange}\n                        required\n                      />\n                    </InputGroup>\n                    {\n                      state.submitted && !state.winning_bet_number &&\n                      <div className=\"error\">Winning Bet Number is required</div>\n                    }\n                  </FormGroup>\n                  {/* <FormGroup>\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-money-coins\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"number\"\n                        autoComplete=\"new-wamount\"\n                        className=\"form-control\"\n                        id=\"winning_amount\"\n                        placeholder=\"Winning Amount\"\n                        name=\"winning_amount\"\n                        value={state.winning_amount}\n                        onChange={handleChange}\n                        required\n                      />\n                    </InputGroup>\n                    {\n                      state.submitted && !state.winning_amount &&\n                      <div className=\"error\">Winning Amount is required</div>\n                    }\n                  </FormGroup> */}\n                  <div className=\"text-center\">\n                    <Button disabled={!(state.game_name && state.winning_bet_number)} onClick={handleSubmit} className=\"my-4\" color=\"primary\" type=\"button\">\n                      Add Result\n                    </Button>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n\n\n        {/* Dark table */}\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">Games Result List</h3>\n                <div className=\"d-flex mt-2\">\n                  <InputGroup size=\"sm\" className=\"w-25\">\n                    <Input\n                      type=\"select\"\n                      autoComplete=\"new-name\"\n                      value={filter.filterS.game_id}\n                      onChange={handleFilterChange}\n                      id=\"game_id\"\n                      placeholder=\"Select Game\"\n                      name=\"game_id\"\n                      required>\n                      <option key=\"select\" value=\"\">Select Game</option>\n                      {gamesList && gamesList.length ?\n                        gamesList.map((list, index) => {\n                          return (\n                            <option key={index} value={list._id}>{list?.game_name}</option>\n                          )\n                        }) : ''\n                      }\n                    </Input>\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input\n                      id=\"winning_bet_number\"\n                      type=\"text\"\n                      name=\"winning_bet_number\"\n                      value={filter.filterS.winning_bet_number}\n                      onChange={handleFilterChange}\n                      placeholder=\"Search Winning Bet Number\"\n                    />\n                  </InputGroup>\n                  <InputGroup size=\"sm\" className=\"w-25 ml-2\">\n                    <Input type=\"Button\" onClick={() => getGameResultData({ ...filter.filterS })} className=\"bg-default text-white\" value={\"Search\"}></Input>\n                  </InputGroup>\n                </div>\n              </CardHeader>\n              <TableContainer>\n                <Table className=\"align-items-center table-dark table-flush\"\n                  responsive>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"text-white\">Game Name</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Winning Bet Number</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Result Date</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\"></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {gameResults && gameResults.length ?\n                      gameResults\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((list, index) => {\n                          return (\n                            <TableRow>\n                              <TableCell className=\"text-white\">{list?.game_id?.game_name}</TableCell>\n                              <TableCell className=\"text-white\" align=\"center\">{list?.winning_bet_number}</TableCell>\n                              <TableCell className=\"text-white\" align=\"center\">{moment(list?.created_at).format('MM-DD-YYYY, h:mm a')}</TableCell>\n                            </TableRow>\n                          )\n                        }) : ''\n                    }\n                    {emptyRows > 0 && (\n                      <TableRow\n                        style={{\n                          height: (53) * emptyRows,\n                        }}\n                      >\n                        <TableCell colSpan={6} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                  <TableFooter>\n                    <TableRow>\n                      <TablePagination\n                        className=\"text-white\"\n                        rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                        colSpan={5}\n                        count={gameResults.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage} />\n                    </TableRow>\n                  </TableFooter>\n                </Table>\n              </TableContainer>\n              {/* <Table\n                className=\"align-items-center table-dark table-flush\"\n                responsive\n              >\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">Game Name</th>\n                    <th scope=\"col\">Winning Bet Number</th>\n                    <th scope=\"col\">Winning Amount</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  {gameResults && gameResults.length ?\n                    gameResults.map((list, index) => {\n                      return (\n                        <tr>\n                          <td>{list?.game_id?.game_name}</td>\n                          <td>{list?.winning_bet_number}</td>\n                          <td>{list?.winning_amount}</td>\n                        </tr>\n                      )\n                    }) : ''\n                  }\n                </tbody>\n              </Table> */}\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.session.user,\n    games: state.games\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(GameResults));\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  Button,\n  Input,\n  Container,\n  Row,\n  UncontrolledDropdown,\n  InputGroup,\n  InputGroupAddon,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { getUserList } from \"../../redux/actions\";\nimport { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, TableFooter, TablePagination } from \"@material-ui/core\";\n\nconst WinningResult = (props) => {\n  console.log(props, \"PROPSSS\");\n  const { userList } = props;\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState({\n    status: ''\n  });\n\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    dispatch({ type: 'LOADING_START' });\n    dispatch(getUserList((errors, res) => {\n      dispatch({ type: 'LOADING_SUCCESS' });\n    }));\n  }, []);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getSearchUser = (e) => {\n    e.preventDefault();\n    setSearchText(e.target.value);\n    // let user = shortListedUser.filter(user => {\n    //     let userName = user.shortlistedUser.first_name + user.shortlistedUser.last_name;\n    //     return userName.indexOf(e.target.value) > 0;\n    // });\n    // setSearchedShortListedUser(user);\n  };\n\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    var filterS = {\n      status: e.currentTarget.getAttribute(\"dropdownvalue\")\n    }\n    setFilter(prevState => ({\n      ...prevState,\n      filter: filterS\n    }));\n    console.log(filter.status, \"STATUSSS\");\n  };\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Dark table */}\n        <Row className=\"mt-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">Users List</h3>\n                <div className=\"d-flex mt-2\">\n                  <InputGroup size=\"sm\" className=\"w-50\">\n                    <Input\n                      type=\"text\"\n                      name=\"\"\n                      value={searchText || \"\"}\n                      onChange={getSearchUser}\n                      placeholder=\"Search.....\"\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                      <Button className=\"bg-default shadow\"><i className=\"fas fa-search text-white\" /></Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                  <UncontrolledDropdown size=\"sm\" className=\"w-50\">\n                    <DropdownToggle caret className=\"float-right\">\n                      {filter.status ? filter.status : \"Status\"}\n                    </DropdownToggle>\n                    <DropdownMenu right id=\"status\">\n                      <DropdownItem onClick={handleFilterChange} dropDownValue=\"Active\">Active</DropdownItem>\n                      <DropdownItem onClick={handleFilterChange} dropDownValue=\"Inactive\">Inactive</DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </div>\n\n              </CardHeader>\n              <TableContainer>\n                <Table className=\"align-items-center table-dark table-flush\"\n                  responsive>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"text-white\">First name</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Last Name</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\">Phone NUmber</TableCell>\n                      <TableCell className=\"text-white\" align=\"center\"> Status</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {userList && userList.length ?\n                      userList\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                      .map((list, index) => {\n                        return (\n                          <TableRow key={index}>\n                            <TableCell className=\"text-white\">{list?.first_name}</TableCell >\n                            <TableCell className=\"text-white\" align=\"center\">{list?.last_name}</TableCell >\n                            <TableCell className=\"text-white\" align=\"center\">{list?.phone_number}</TableCell >\n                            <TableCell className=\"text-white\" align=\"center\">{list?.status}</TableCell >\n                          </TableRow>\n                        )\n                      }) : ''\n                    }\n                    {emptyRows > 0 && (\n                        <TableRow\n                          style={{\n                            height: (53) * emptyRows,\n                          }}\n                        >\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                  </TableBody>\n                  <TableFooter>\n                    <TableRow>\n                      <TablePagination \n                      className=\"text-white\"\n                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                      colSpan={5}\n                      count={userList.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}/>\n                    </TableRow>\n                  </TableFooter>\n                </Table>\n              </TableContainer>\n              <Table\n                className=\"align-items-center table-dark table-flush\"\n                responsive\n              >\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">First Name</th>\n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  {userList && userList.length ?\n                    userList.map((list, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{list?.first_name}</td>\n                          <td>{list?.last_name}</td>\n                          <td>{list?.phone_number}</td>\n                          <td>{list?.status}</td>\n                        </tr>\n                      )\n                    }) : ''\n                  }\n                </tbody>\n              </Table>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.session.user,\n    userList: state.user.userList\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {})(WinningResult));\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport { \n  Users,\n  Game,\n  GameBets,\n  GameResults,\n  Result,\n  Wallet,\n  Profile,\n  Maps,\n  Register,\n  Login,\n  Tables,\n  Icons,\n  TransactionsHistory,\n  PaymentRequest,\n  WinningResult\n } from \"views/examples\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-circle-08 text-red\",\n    component: Users,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/games\",\n    name: \"Today Game's\",\n    icon: \"ni ni-planet text-info\",\n    component: Game,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/gameBets\",\n    name: \"Game Bets\",\n    icon: \"ni ni-planet text-green\",\n    component: GameBets,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/gameResults\",\n    name: \"Result\",\n    icon: \"ni ni-pin-3 text-indigo\",\n    component: GameResults,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/winningResults\",\n  //   name: \"Recent Winning Results\",\n  //   icon: \"ni ni-key-25 text-black\",\n  //   component: WinningResult,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/wallet\",\n    name: \"Wallet\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Wallet,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/paymentRequest\",\n    name: \"Money Request\",\n    icon: \"ni ni-bullet-list-67 text-orange\",\n    component: PaymentRequest,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/transactionsHistory\",\n    name: \"Transaction History\",\n    icon: \"ni ni-key-25 text-blue\",\n    component: TransactionsHistory,\n    layout: \"/admin\",\n  }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: require(\"../assets/img/brand/argon-react.png\").default,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"/admin/index\" />\n        </Switch>\n        <Container fluid>\n          <AdminFooter />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AdminNavbar = () => {\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            <img\n              alt=\"...\"\n              src={\n                require(\"../../assets/img/brand/argon-react-white.png\").default\n              }\n            />\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/brand/argon-react.png\")\n                          .default\n                      }\n                    />\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Nav className=\"ml-auto\" navbar>\n              {/* <NavItem>\n                <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                  <i className=\"ni ni-planet\" />\n                  <span className=\"nav-link-inner--text\">Dashboard</span>\n                </NavLink>\n              </NavItem> */}\n              {/* <NavItem>\n                <NavLink\n                  className=\"nav-link-icon\"\n                  to=\"/auth/register\"\n                  tag={Link}\n                >\n                  <i className=\"ni ni-circle-08\" />\n                  <span className=\"nav-link-inner--text\">Register</span>\n                </NavLink>\n              </NavItem> */}\n              {/* <NavItem>\n                <NavLink className=\"nav-link-icon\" to=\"/auth/login\" tag={Link}>\n                  <i className=\"ni ni-key-25\" />\n                  <span className=\"nav-link-inner--text\">Login</span>\n                </NavLink>\n              </NavItem> */}\n              {/* <NavItem>\n                <NavLink\n                  className=\"nav-link-icon\"\n                  to=\"/admin/user-profile\"\n                  tag={Link}\n                >\n                  <i className=\"ni ni-single-02\" />\n                  <span className=\"nav-link-inner--text\">Profile</span>\n                </NavLink>\n              </NavItem> */}\n            </Nav>\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nconst Login = () => {\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © {new Date().getFullYear()}{\" \"}\n                <a\n                  className=\"font-weight-bold ml-1\"\n                  href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                  target=\"_blank\"\n                >\n                  Creative Tim\n                </a>\n              </div>\n            </Col>\n            <Col xl=\"6\">\n              <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                <NavItem>\n                  <NavLink\n                    href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    Creative Tim\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    href=\"https://www.creative-tim.com/presentation?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    About Us\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    href=\"http://blog.creative-tim.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    Blog\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    MIT License\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\nimport Login from \"views/examples/Login\";\n\n// import routes from \"routes.js\";\n\nconst Auth = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  let routes = [\n    {\n      path: \"/login\",\n      name: \"Login\",\n      icon: \"ni ni-circle-08 text-pink\",\n      component: Login,\n      layout: \"/auth\",\n    }\n  ];\n\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <AuthNavbar />\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\n          <Container>\n            <div className=\"header-body text-center mb-7\">\n              <Row className=\"justify-content-center\">\n                <Col lg=\"5\" md=\"6\">\n                  <h1 className=\"text-white\">Welcome!</h1>\n                  <p className=\"text-lead text-light\">\n                    Use these awesome forms to login or create new account in\n                    your project for free.\n                  </p>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/auth/login\" />\n            </Switch>\n          </Row>\n        </Container>\n      </div>\n      <AuthFooter />\n    </>\n  );\n};\n\nexport default Auth;\n","import React, { Component } from \"react\";\nimport { Loader } from \"react-loaders\";\nimport { connect } from \"react-redux\";\n\nimport \"./loader.css\";\n\nclass RenderLoader extends Component {\n  render() {\n    const { showLoader, checked, search, chat } = this.props;\n    //console.log((!showLoader || !checked), !showLoader, !checked)\n    // if (!showLoader || !checked){\n    //   return null;\n    // }\n    //add search condition to temporarily disable loader when user is typing/searching\n    if (!showLoader || !checked || search || chat) {\n      return null;\n    }\n\n    return (\n      <div className=\"loader-overlay\">\n        <Loader type=\"ball-scale-multiple\" active color={'linear-gradient(87deg, #11cdef 0, #1171ef 100%)'} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ loader, session, search, posts }) => {\n  return {\n    showLoader: loader.load,\n    checked: session.checked,\n  };\n};\n\nexport default connect(mapStateToProps)(RenderLoader);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport RenderLoader from \"components/Loader/loader.js\";\n\nimport ReduxToastr from 'react-redux-toastr';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n\n  }\n  render() {\n    const { authenticated, checked, user ,location : {pathname} } = this.props;\n    return (\n      <React.Fragment>\n         <ReduxToastr\n          timeOut={4000}\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n           />\n        <RenderLoader isLoaded={this.props.isLoaded} />\n        <Switch>\n          {authenticated && checked && \n            <Switch>\n              <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n              <Redirect from=\"/\" to=\"/admin/index\" />\n            </Switch>\n          }\n          {!authenticated && checked &&\n            <Switch>\n              <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\n              <Redirect from=\"/\" to=\"/auth/login\" />\n            </Switch>\n          }\n        </Switch>\n        {/* {appRoutes(authenticated, checked, user,pathname)} */}\n      </React.Fragment>\n    );\n  }\n};\n\nconst { bool } = PropTypes;\n\nApp.propTypes = {\n  authenticated: bool.isRequired,\n  checked: bool.isRequired,\n};\n\nfunction mapStateToProps({ session, networkReducer, loader }) {\n  return {\n    checked: session.checked,\n    authenticated: session.authenticated,\n    user: session.user,\n    isLoaded: loader.load\n  };\n}\nexport default withRouter(connect(mapStateToProps)(App));","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport store from \"./redux/store/configStore\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);","export default __webpack_public_path__ + \"static/media/team-1-800x800.fa5a7ac2.jpg\";","export default __webpack_public_path__ + \"static/media/team-2-800x800.3e08ef14.jpg\";","export default __webpack_public_path__ + \"static/media/team-3-800x800.70911cdd.jpg\";","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function () {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [\n    [left, bottom],\n    [left, top],\n    [right, top],\n    [right, bottom],\n  ];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\",\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\",\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\",\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\",\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0,\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16,\n          },\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"],\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\",\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"],\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4,\n          },\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false,\n        },\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function (chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function (label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        },\n      },\n    },\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2],\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function (value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      },\n    },\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false,\n    },\n    ticks: {\n      padding: 20,\n    },\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900],\n          },\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            },\n          },\n        },\n      ],\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        },\n      },\n    },\n  },\n  data1: (canvas) => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60],\n        },\n      ],\n    };\n  },\n  data2: (canvas) => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40],\n        },\n      ],\n    };\n  },\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            },\n          },\n        },\n      ],\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        },\n      },\n    },\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10,\n      },\n    ],\n  },\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2, // used inside src/views/Index.js\n};\n","const configObj = {\n  apiProtocol: process.env.NODE_ENV === \"production\" ? \"https\" : \"http\",\n  portname: process.env.NODE_ENV === \"production\" ? \"\" : \"3005\",\n  baseApiPort: process.env.NODE_ENV === \"production\" ? \"\" : \":3000\",\n  origin: process.env.NODE_ENV === \"production\" ? \"\" : \"http://localhost:3010/\",\n  apiBaseUrl:\n    process.env.NODE_ENV === \"production\"\n     // ? `http://34.206.89.164:3000` /*live server client `http://18.221.19.48:3000` */\n      ? `http://ec2-3-144-3-190.us-east-2.compute.amazonaws.com:3000` /*live server client `http://18.221.19.48:3000` */\n      : \"http://localhost:3000\"\n};\nmodule.exports = configObj;\n"],"sourceRoot":""}